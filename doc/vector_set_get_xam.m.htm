<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Octave: Setting and Getting Vector Elements: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Octave: Setting and Getting Vector Elements: Example and Test">
<meta name="keywords" id="keywords" content=" octave: setting getting vector elements: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_vector_set_get_xam.m_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_swig" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="vector_set_get_xam.cpp.htm" target="_top">Prev</a>
</td><td><a href="vector_set_get_xam.pm.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_swig</option>
<option>library</option>
<option>vector</option>
<option>vector_set_get</option>
<option>vector_set_get_xam.m</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>cppad_swig-&gt;</option>
<option>testing</option>
<option>swig_xam.i</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>library-&gt;</option>
<option>module</option>
<option>a_double</option>
<option>vector</option>
<option>a_fun</option>
<option>sparse</option>
<option>error</option>
<option>xam.m4</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>vector-&gt;</option>
<option>vector_ctor</option>
<option>vector_size</option>
<option>vector_set_get</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>vector_set_get-&gt;</option>
<option>vector_set_get_xam.cpp</option>
<option>vector_set_get_xam.m</option>
<option>vector_set_get_xam.pm</option>
<option>vector_set_get_xam.py</option>
</select>
</td>
<td>vector_set_get_xam.m</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Octave: Setting and Getting Vector Elements: Example and Test</big></big></b></center>
<pre><tt><b><font color="#0000FF">function</font></b> ok = <b><font color="#000000">vector_set_get_xam</font></b>()
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% load the Cppad Swig library</font></i>
     m_cppad
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% initialize return variable</font></i>
     ok = true;
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     n = 4;
     bv = m_cppad.<b><font color="#000000">vec_bool</font></b>(n);
     iv = m_cppad.<b><font color="#000000">vec_int</font></b>(n);
     dv = m_cppad.<b><font color="#000000">vec_double</font></b>(n);
     av = m_cppad.<b><font color="#000000">vec_a_double</font></b>(n);
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% setting elements</font></i>
     <b><font color="#0000FF">for</font></b> i = [ 0 :(n -1) ]
          <b><font color="#000000">bv</font></b>(i) = i &gt; n / 2;
          <b><font color="#000000">iv</font></b>(i) = 2 * i;
          <b><font color="#000000">dv</font></b>(i) = 3.0 * i;
          <b><font color="#000000">av</font></b>(i) = m_cppad.<b><font color="#000000">a_double</font></b>(4.0 * i);
     <b><font color="#0000FF">end</font></b>
     <i><font color="#9A1900">%</font></i>
     <b><font color="#0000FF">for</font></b> i = [ 0 :(n -1) ]
          be = <b><font color="#000000">bv</font></b>(i);
          ok = ok &amp;&amp; be == (i &gt; n / 2) ;
          <i><font color="#9A1900">%</font></i>
          ie = <b><font color="#000000">iv</font></b>(i);
          ok = ok &amp;&amp; ie == 2 * i ;
          <i><font color="#9A1900">%</font></i>
          de = <b><font color="#000000">dv</font></b>(i);
          ok = ok &amp;&amp; de == 3.0 * i ;
          <i><font color="#9A1900">%</font></i>
          ae = <b><font color="#000000">av</font></b>(i);
          ok = ok &amp;&amp; ae.<b><font color="#000000">value</font></b>() == 4.0 * i ;
     <b><font color="#0000FF">end</font></b>
     <i><font color="#9A1900">%</font></i>
     <b><font color="#0000FF">return</font></b>;
<b><font color="#0000FF">end</font></b></tt></pre>

<hr>Input File: build/lib/example/octave/vector_set_get_xam.m

</body>
</html>
