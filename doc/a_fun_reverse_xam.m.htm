<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Octave: Reverse Mode AD: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Octave: Reverse Mode AD: Example and Test">
<meta name="keywords" id="keywords" content=" octave: reverse mode ad: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_a_fun_reverse_xam.m_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_swig" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="a_fun_reverse_xam.cpp.htm" target="_top">Prev</a>
</td><td><a href="a_fun_reverse_xam.pm.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_swig</option>
<option>library</option>
<option>a_fun</option>
<option>a_fun_reverse</option>
<option>a_fun_reverse_xam.m</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>cppad_swig-&gt;</option>
<option>testing</option>
<option>swig_xam.i</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>library-&gt;</option>
<option>module</option>
<option>a_double</option>
<option>vector</option>
<option>a_fun</option>
<option>sparse</option>
<option>error</option>
<option>xam.m4</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>a_fun-&gt;</option>
<option>independent</option>
<option>abort_recording</option>
<option>a_fun_ctor</option>
<option>a_fun_jacobian</option>
<option>a_fun_hessian</option>
<option>a_fun_forward</option>
<option>a_fun_reverse</option>
<option>a_fun_optimize</option>
<option>a_fun_property</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>a_fun_reverse-&gt;</option>
<option>a_fun_reverse_xam.cpp</option>
<option>a_fun_reverse_xam.m</option>
<option>a_fun_reverse_xam.pm</option>
<option>a_fun_reverse_xam.py</option>
</select>
</td>
<td>a_fun_reverse_xam.m</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Octave: Reverse Mode AD: Example and Test</big></big></b></center>
<pre><tt><b><font color="#0000FF">function</font></b> ok = <b><font color="#000000">a_fun_reverse_xam</font></b>()
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% load the Cppad Swig library</font></i>
     m_cppad
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% initialize return variable</font></i>
     ok = true;
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">% number of dependent and independent variables</font></i>
     n_dep = 1;
     n_ind = 3;
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% create the independent variables ax</font></i>
     xp = m_cppad.<b><font color="#000000">vec_double</font></b>(n_ind);
     <b><font color="#0000FF">for</font></b> i = [ 0 :(n_ind -1) ]
          <b><font color="#000000">xp</font></b>(i) = i;
     <b><font color="#0000FF">end</font></b>
     ax = m_cppad.<b><font color="#000000">independent</font></b>(xp);
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% create dependent variables ay with ay0 = ax_0 * ax_1 * ax_2</font></i>
     ax_0 = <b><font color="#000000">ax</font></b>(0);
     ax_1 = <b><font color="#000000">ax</font></b>(1);
     ax_2 = <b><font color="#000000">ax</font></b>(2);
     ay = m_cppad.<b><font color="#000000">vec_a_double</font></b>(n_dep);
     <b><font color="#000000">ay</font></b>(0) = ax_0 * ax_1 * ax_2;
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% define af corresponding to f(x) = x_0 * x_1 * x_2</font></i>
     af = m_cppad.<b><font color="#000000">a_fun</font></b>(ax, ay);
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">% define          X(t) = (x_0 + t, x_1 + t, x_2 + t)</font></i>
     <i><font color="#9A1900">% it follows that Y(t) = f(X(t)) = (x_0 + t) * (x_1 + t) * (x_2 + t)</font></i>
     <i><font color="#9A1900">% and that       Y'(0) = x_1 * x_2 + x_0 * x_2 + x_0 * x_1</font></i>
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">% zero order forward mode</font></i>
     p = 0;
     <b><font color="#000000">xp</font></b>(0) = 2.0;
     <b><font color="#000000">xp</font></b>(1) = 3.0;
     <b><font color="#000000">xp</font></b>(2) = 4.0;
     yp = af.<b><font color="#000000">forward</font></b>(p, xp);
     ok = ok &amp;&amp; <b><font color="#000000">yp</font></b>(0) == 24.0;
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">% first order reverse (derivative of zero order forward)</font></i>
     <i><font color="#9A1900">% define G( Y ) = y_0 = x_0 * x_1 * x_2</font></i>
     q = 1;
     yq1 = m_cppad.<b><font color="#000000">vec_double</font></b>(n_dep);
     <b><font color="#000000">yq1</font></b>(0) = 1.0;
     xq1 = af.<b><font color="#000000">reverse</font></b>(q, yq1);
     <i><font color="#9A1900">% partial G w.r.t x_0</font></i>
     ok = ok &amp;&amp; <b><font color="#000000">xq1</font></b>(0) == 3.0 * 4.0 ;
     <i><font color="#9A1900">% partial G w.r.t x_1</font></i>
     ok = ok &amp;&amp; <b><font color="#000000">xq1</font></b>(1) == 2.0 * 4.0 ;
     <i><font color="#9A1900">% partial G w.r.t x_2</font></i>
     ok = ok &amp;&amp; <b><font color="#000000">xq1</font></b>(2) == 2.0 * 3.0 ;
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">% first order forward mode</font></i>
     p = 1;
     <b><font color="#000000">xp</font></b>(0) = 1.0;
     <b><font color="#000000">xp</font></b>(1) = 1.0;
     <b><font color="#000000">xp</font></b>(2) = 1.0;
     yp = af.<b><font color="#000000">forward</font></b>(p, xp);
     ok = ok &amp;&amp; <b><font color="#000000">yp</font></b>(0) == 3.0*4.0 + 2.0*4.0 + 2.0*3.0;
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">% second order reverse (derivative of first order forward)</font></i>
     <i><font color="#9A1900">% define G( y_0^0 , y_0^1 ) = y_0^1</font></i>
     <i><font color="#9A1900">% = x_1^0 * x_2^0  +  x_0^0 * x_2^0  +  x_0^0  *  x_1^0</font></i>
     q = 2;
     yq2 = m_cppad.<b><font color="#000000">vec_double</font></b>(n_dep * q);
     <b><font color="#000000">yq2</font></b>(0 * q + 0) = 0.0; <i><font color="#9A1900">% partial of G w.r.t y_0^0</font></i>
     <b><font color="#000000">yq2</font></b>(0 * q + 1) = 1.0; <i><font color="#9A1900">% partial of G w.r.t y_0^1</font></i>
     xq2 = af.<b><font color="#000000">reverse</font></b>(q, yq2);
     <i><font color="#9A1900">% partial G w.r.t x_0^0</font></i>
     ok = ok &amp;&amp; <b><font color="#000000">xq2</font></b>(0 * q + 0) == 3.0 + 4.0;
     <i><font color="#9A1900">% partial G w.r.t x_1^0</font></i>
     ok = ok &amp;&amp; <b><font color="#000000">xq2</font></b>(1 * q + 0) == 2.0 + 4.0;
     <i><font color="#9A1900">% partial G w.r.t x_2^0</font></i>
     ok = ok &amp;&amp; <b><font color="#000000">xq2</font></b>(2 * q + 0) == 2.0 + 3.0;
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">%</font></i>
     <b><font color="#0000FF">return</font></b>;
<b><font color="#0000FF">end</font></b></tt></pre>

<hr>Input File: build/lib/example/octave/a_fun_reverse_xam.m

</body>
</html>
