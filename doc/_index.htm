<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Keyword Index</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Keyword Index">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='__index_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_swig" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="_reference.htm" target="_top">Prev</a>
</td><td><a href="_search.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_swig</option>
<option>_index</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>cppad_swig-&gt;</option>
<option>testing</option>
<option>swig_xam.i</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>_index</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>A</option>
<option>B</option>
<option>C</option>
<option>D</option>
<option>E</option>
<option>F</option>
<option>G</option>
<option>H</option>
<option>I</option>
<option>J</option>
<option>K</option>
<option>L</option>
<option>M</option>
<option>N</option>
<option>O</option>
<option>P</option>
<option>Q</option>
<option>R</option>
<option>S</option>
<option>T</option>
<option>U</option>
<option>V</option>
<option>W</option>
<option>X</option>
<option>Y</option>
</select>
</td>
</tr></table><br>
<center><b><big><big>Keyword Index</big></big></b></center>
<b>/</b>&#160;<a href="check_swig_xam.py.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script</a><br>
&#160;&#160;<a href="check_swig_xam.pl.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script</a><br>
&#160;&#160;<a href="check_swig_xam.m.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script</a><br>
01<b>-</b>10&#160;<a href="whats_new_2017.htm#01-10" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-10</a><br>
01<b>-</b>11&#160;<a href="whats_new_2017.htm#01-11" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-11</a><br>
01<b>-</b>12&#160;<a href="whats_new_2017.htm#01-12" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-12</a><br>
01<b>-</b>13&#160;<a href="whats_new_2017.htm#01-13" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-13</a><br>
01<b>-</b>14&#160;<a href="whats_new_2017.htm#01-14" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-14</a><br>
01<b>-</b>15&#160;<a href="whats_new_2017.htm#01-15" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-15</a><br>
01<b>-</b>16&#160;<a href="whats_new_2017.htm#01-16" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-16</a><br>
01<b>-</b>17&#160;<a href="whats_new_2017.htm#01-17" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-17</a><br>
01<b>-</b>18&#160;<a href="whats_new_2017.htm#01-18" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;01-18</a><br>
02<b>-</b>16&#160;<a href="whats_new_2017.htm#02-16" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;02-16</a><br>
02<b>-</b>20&#160;<a href="whats_new_2017.htm#02-20" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;02-20</a><br>
02<b>-</b>21&#160;<a href="whats_new_2017.htm#02-21" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;02-21</a><br>
02<b>-</b>22&#160;<a href="whats_new_2017.htm#02-22" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;02-22</a><br>
02<b>-</b>23&#160;<a href="whats_new_2017.htm#02-23" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;02-23</a><br>
02<b>-</b>24&#160;<a href="whats_new_2017.htm#02-24" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;02-24</a><br>
02<b>-</b>25&#160;<a href="whats_new_2017.htm#02-25" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017:&#160;02-25</a><br>
02<b>-</b>28&#160;<a href="whats_new_2018.htm#02-28" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018:&#160;02-28</a><br>
03<b>-</b>08&#160;<a href="whats_new_2018.htm#03-08" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018:&#160;03-08</a><br>
2017&#160;<a href="whats_new_2017.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017</a><br>
2018&#160;<a href="whats_new_2018.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018</a><br>

<b><big><a name="A">A</a></big></b>
<br>
a<b>_</b>double&#160;<a href="a_fun_abort_xam.py.htm" target="_top">Python:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.pm.htm" target="_top">Perl:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.m.htm" target="_top">Octave:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.cpp.htm" target="_top">C++:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property.htm" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op.htm" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ctor.htm" target="_top">The&nbsp;a_double&nbsp;Constructor</a><br>
a<b>_</b>fun&#160;<a href="a_fun_property_xam.py.htm" target="_top">Python:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.pm.htm" target="_top">Perl:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.m.htm" target="_top">Octave:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.cpp.htm" target="_top">C++:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_ctor.htm" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object</a><br>
a<b>_</b>fun<b>:</b>&#160;<a href="a_fun_optimize_xam.py.htm" target="_top">Python:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.pm.htm" target="_top">Perl:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.m.htm" target="_top">Octave:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.cpp.htm" target="_top">C++:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
abort&#160;<a href="a_fun_abort_xam.py.htm" target="_top">Python:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.pm.htm" target="_top">Perl:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.m.htm" target="_top">Octave:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.cpp.htm" target="_top">C++:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.htm" target="_top">Abort&nbsp;Recording</a><br>
ad&#160;<a href="a_fun_property.htm" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;<a href="a_fun_optimize.htm" target="_top">Optimize&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;<a href="a_fun_reverse.htm" target="_top">Reverse&nbsp;Mode&nbsp;AD</a><br>
&#160;&#160;&#160;<a href="a_fun_forward.htm" target="_top">Forward&nbsp;Mode&nbsp;AD</a><br>
&#160;&#160;&#160;<a href="a_fun_hessian.htm" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;<a href="a_fun_jacobian.htm" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;<a href="a_double_cond_assign.htm" target="_top">AD&nbsp;Conditional&nbsp;Assignment</a><br>
&#160;&#160;&#160;<a href="a_double_unary_fun.htm" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result</a><br>
&#160;&#160;&#160;<a href="a_double_ad_binary.htm" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result</a><br>
&#160;&#160;&#160;<a href="a_double_property.htm#ad" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object:&#160;ad</a><br>
&#160;&#160;&#160;<a href="a_double_ctor.htm#ad" target="_top">The&nbsp;a_double&nbsp;Constructor:&#160;ad</a><br>
&#160;&#160;&#160;<a href="a_fun.htm" target="_top">Cppad&nbsp;Swig&nbsp;AD&nbsp;Functions</a><br>
&#160;&#160;&#160;<a href="a_double.htm" target="_top">Cppad&nbsp;Swig&nbsp;AD&nbsp;Scalars</a><br>
&#160;&#160;&#160;<a href="cppad_swig.htm" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface</a><br>
ad<b>:</b>&#160;<a href="a_fun_reverse_xam.py.htm" target="_top">Python:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.pm.htm" target="_top">Perl:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.m.htm" target="_top">Octave:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.cpp.htm" target="_top">C++:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.py.htm" target="_top">Python:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.pm.htm" target="_top">Perl:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.m.htm" target="_top">Octave:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.cpp.htm" target="_top">C++:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
ad<b>_</b>double&#160;<a href="a_double_assign.htm" target="_top">ad_double&nbsp;Assignment&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare.htm" target="_top">ad_double&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary.htm" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result</a><br>
ad<b>_</b>other&#160;<a href="a_double_ctor.htm#ad_other" target="_top">The&nbsp;a_double&nbsp;Constructor:&#160;ad_other</a><br>
add&#160;<a href="check_swig_xam.pl.htm#Add Current Directory To Search Path" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Add&nbsp;Current&nbsp;Directory&nbsp;To&nbsp;Search&nbsp;Path</a><br>
add<b>_</b>by<b>_</b>ptr&#160;<a href="swig_xam_function.htm#add_by_ptr" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications:&#160;add_by_ptr</a><br>
addition&#160;<a href="swig_xam_template_class.htm#addition" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class:&#160;addition</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.htm#addition" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class:&#160;addition</a><br>
af&#160;<a href="sparse_hes.htm#af" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;af</a><br>
&#160;&#160;&#160;<a href="sparse_jac.htm#af" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;af</a><br>
&#160;&#160;&#160;<a href="hes_sparsity.htm#af" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;af</a><br>
&#160;&#160;&#160;<a href="jac_sparsity.htm#af" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;af</a><br>
&#160;&#160;&#160;<a href="a_fun_property.htm#af" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;af</a><br>
&#160;&#160;&#160;<a href="a_fun_optimize.htm#af" target="_top">Optimize&nbsp;an&nbsp;AD&nbsp;Function:&#160;af</a><br>
&#160;&#160;&#160;<a href="a_fun_reverse.htm#af" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;af</a><br>
&#160;&#160;&#160;<a href="a_fun_forward.htm#af" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;af</a><br>
&#160;&#160;&#160;<a href="a_fun_hessian.htm#af" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;af</a><br>
&#160;&#160;&#160;<a href="a_fun_jacobian.htm#af" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;af</a><br>
&#160;&#160;&#160;<a href="a_fun_ctor.htm#af" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object:&#160;af</a><br>
and<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.And_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.And_</a><br>
andassign<b>_</b>&#160;<a href="lang_m4.htm#Assignment Statements.AndAssign_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Assignment&nbsp;Statements.AndAssign_</a><br>
are&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements</a><br>
argument&#160;<a href="lang_m4.htm#Module_.One Argument" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Module_.One&nbsp;Argument</a><br>
arguments&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm#Module_.No Arguments" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Module_.No&nbsp;Arguments</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm#No Arguments" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments</a><br>
assign<b>_</b>&#160;<a href="lang_m4.htm#Assignment Statements.Assign_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Assignment&nbsp;Statements.Assign_</a><br>
assignment&#160;<a href="lang_m4.htm#Assignment Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Assignment&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign.htm" target="_top">AD&nbsp;Conditional&nbsp;Assignment</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign.htm" target="_top">ad_double&nbsp;Assignment&nbsp;Operators</a><br>
assignment<b>:</b>&#160;<a href="a_double_cond_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
assumption&#160;<a href="omhelp.m4.htm#Assumption" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code:&#160;Assumption</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_name.m4.htm#Assumption" target="_top">Language&nbsp;Name:&#160;Assumption</a><br>
assumptions&#160;<a href="header.m4.htm#Assumptions" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output:&#160;Assumptions</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam_file_name.m4.htm#Assumptions" target="_top">Function&nbsp;and&nbsp;File&nbsp;Naming:&#160;Assumptions</a><br>
available&#160;<a href="testing.htm#Available Tests" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;Available&nbsp;Tests</a><br>
ax&#160;<a href="a_fun_ctor.htm#ax" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object:&#160;ax</a><br>
&#160;&#160;&#160;<a href="independent.htm#ax" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording:&#160;ax</a><br>
&#160;&#160;&#160;<a href="a_double_unary_fun.htm#ax" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&#160;ax</a><br>
&#160;&#160;&#160;<a href="a_double_assign.htm#ax" target="_top">ad_double&nbsp;Assignment&nbsp;Operators:&#160;ax</a><br>
&#160;&#160;&#160;<a href="a_double_compare.htm#ax" target="_top">ad_double&nbsp;Comparison&nbsp;Operators:&#160;ax</a><br>
&#160;&#160;&#160;<a href="a_double_ad_binary.htm#ax" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result:&#160;ax</a><br>
&#160;&#160;&#160;<a href="a_double_unary_op.htm#ax" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&#160;ax</a><br>
ay&#160;<a href="a_fun_ctor.htm#ay" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object:&#160;ay</a><br>
&#160;&#160;&#160;<a href="a_double_unary_fun.htm#ay" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&#160;ay</a><br>
&#160;&#160;&#160;<a href="a_double_assign.htm#ay" target="_top">ad_double&nbsp;Assignment&nbsp;Operators:&#160;ay</a><br>
&#160;&#160;&#160;<a href="a_double_compare.htm#ay" target="_top">ad_double&nbsp;Comparison&nbsp;Operators:&#160;ay</a><br>
&#160;&#160;&#160;<a href="a_double_ad_binary.htm#ay" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result:&#160;ay</a><br>
&#160;&#160;&#160;<a href="a_double_unary_op.htm#ay" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&#160;ay</a><br>
az&#160;<a href="a_double_ad_binary.htm#az" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result:&#160;az</a><br>

<b><big><a name="B">B</a></big></b>
<br>
beginboolfun<b>_</b>&#160;<a href="lang_m4.htm#Function Statements.BeginBoolFun_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Function&nbsp;Statements.BeginBoolFun_</a><br>
binary&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary.htm" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testing.htm#Binary Directory" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;Binary&nbsp;Directory</a><br>
block&#160;<a href="error_message.htm#In Catch Block" target="_top">Exception&nbsp;Handling:&#160;In&nbsp;Catch&nbsp;Block</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message.htm#In Try Block" target="_top">Exception&nbsp;Handling:&#160;In&nbsp;Try&nbsp;Block</a><br>

<b><big><a name="C">C</a></big></b>
<br>
c&#160;<a href="sparse_rc.htm#put.c" target="_top">Sparsity&nbsp;Patterns:&#160;put.c</a><br>
c<b>++</b>&#160;<a href="swig_xam_template_class.hpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;<a href="swig_xam_function.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;<a href="swig_xam_template_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;<a href="swig_xam_function.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications</a><br>
&#160;&#160;&#160;&#160;<a href="swig_xam.hpp.htm" target="_top">Example&nbsp;C++&nbsp;Library&nbsp;That&nbsp;is&nbsp;Called&nbsp;by&nbsp;Swig</a><br>
&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm#C++ Includes" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;C++&nbsp;Includes</a><br>
&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++</a><br>
&#160;&#160;&#160;&#160;<a href="cppad_swig.htm#C++ Function Speed" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;C++&nbsp;Function&nbsp;Speed</a><br>
&#160;&#160;&#160;&#160;<a href="cppad_swig.htm" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface</a><br>
c<b>++:</b>&#160;<a href="error_message_xam.cpp.htm" target="_top">C++:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.cpp.htm" target="_top">C++:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.cpp.htm" target="_top">C++:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.cpp.htm" target="_top">C++:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.cpp.htm" target="_top">C++:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.cpp.htm" target="_top">C++:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.cpp.htm" target="_top">C++:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.cpp.htm" target="_top">C++:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.cpp.htm" target="_top">C++:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
c<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.C_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.C_</a><br>
calculation&#160;<a href="sparse.htm" target="_top">Cppad&nbsp;Swig&nbsp;Sparse&nbsp;Calculation</a><br>
called&#160;<a href="swig_xam.hpp.htm" target="_top">Example&nbsp;C++&nbsp;Library&nbsp;That&nbsp;is&nbsp;Called&nbsp;by&nbsp;Swig</a><br>
catch&#160;<a href="error_message.htm#In Catch Block" target="_top">Exception&nbsp;Handling:&#160;In&nbsp;Catch&nbsp;Block</a><br>
catch<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.Catch_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.Catch_</a><br>
changes&#160;<a href="whats_new_2017.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_2018.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018</a><br>
check&#160;<a href="testing.htm#check" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;check</a><br>
check<b>_</b>lib&#160;<a href="testing.htm#check_swig_xam.check_lib" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;check_swig_xam.check_lib</a><br>
check<b>_</b>swig<b>_</b>xam&#160;<a href="testing.htm#check_swig_xam" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;check_swig_xam</a><br>
class&#160;<a href="swig_xam_template_class.hpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_template_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class</a><br>
cmake<b>_</b>binary<b>_</b>dir&#160;<a href="run_cmake.sh.htm#cmake_binary_dir" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;cmake_binary_dir</a><br>
cmake<b>_</b>build<b>_</b>type&#160;<a href="run_cmake.sh.htm#cmake_build_type" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;cmake_build_type</a><br>
cmake<b>_</b>generator&#160;<a href="run_cmake.sh.htm#cmake_generator" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;cmake_generator</a><br>
cmake<b>_</b>verbose<b>_</b>makefile&#160;<a href="run_cmake.sh.htm#cmake_verbose_makefile" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;cmake_verbose_makefile</a><br>
code&#160;<a href="omhelp.m4.htm" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
coefficient&#160;<a href="a_fun_forward.htm#Taylor Coefficient" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;Taylor&nbsp;Coefficient</a><br>
col&#160;<a href="sparse_rcv.htm#col" target="_top">Sparse&nbsp;Matrices:&#160;col</a><br>
&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#col" target="_top">Sparsity&nbsp;Patterns:&#160;col</a><br>
col<b>_</b>major&#160;<a href="sparse_rcv.htm#col_major" target="_top">Sparse&nbsp;Matrices:&#160;col_major</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#col_major" target="_top">Sparsity&nbsp;Patterns:&#160;col_major</a><br>
command&#160;<a href="xam.m4.htm#m4 Command" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros:&#160;m4&nbsp;Command</a><br>
comment&#160;<a href="header.m4.htm" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output</a><br>
comparison&#160;<a href="a_double_compare_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare.htm" target="_top">ad_double&nbsp;Comparison&nbsp;Operators</a><br>
component&#160;<a href="hes_sparsity.htm#Sparsity for Component Wise Hessian" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;Sparsity&nbsp;for&nbsp;Component&nbsp;Wise&nbsp;Hessian</a><br>
computing&#160;<a href="sparse_jac_xam.py.htm" target="_top">Python:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.pm.htm" target="_top">Perl:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.m.htm" target="_top">Octave:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.cpp.htm" target="_top">C++:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes.htm" target="_top">Computing&nbsp;Sparse&nbsp;Hessians</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians</a><br>
conditional&#160;<a href="a_double_cond_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign.htm" target="_top">AD&nbsp;Conditional&nbsp;Assignment</a><br>
configuration&#160;<a href="testing.htm#Configuration" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;Configuration</a><br>
configure&#160;<a href="run_cmake.sh.htm" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system</a><br>
constructor&#160;<a href="lang_m4.htm#Module_.Constructor" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Module_.Constructor</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ctor.htm" target="_top">The&nbsp;a_double&nbsp;Constructor</a><br>
constructors&#160;<a href="vector_ctor.htm" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors</a><br>
contents&#160;<a href="cppad_swig.htm#Contents" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Contents</a><br>
control&#160;<a href="lang_m4.htm#Control Flow Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Control&nbsp;Flow&nbsp;Statements</a><br>
convention&#160;<a href="lang_m4.htm#Convention" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Convention</a><br>
cop&#160;<a href="a_double_cond_assign.htm#cop" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;cop</a><br>
count&#160;<a href="check_swig_xam.pl.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
cppad&#160;<a href="whats_new_2017.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_2018.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.py.htm" target="_top">Python:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.pm.htm" target="_top">Perl:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.m.htm" target="_top">Octave:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.cpp.htm" target="_top">C++:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message.htm#Cppad Errors" target="_top">Exception&nbsp;Handling:&#160;Cppad&nbsp;Errors</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_ctor.htm" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="error.htm" target="_top">Cppad&nbsp;Swig&nbsp;Error&nbsp;Messaging</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse.htm" target="_top">Cppad&nbsp;Swig&nbsp;Sparse&nbsp;Calculation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun.htm" target="_top">Cppad&nbsp;Swig&nbsp;AD&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector.htm" target="_top">Cppad&nbsp;Swig&nbsp;Vectors</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double.htm" target="_top">Cppad&nbsp;Swig&nbsp;AD&nbsp;Scalars</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="module.htm" target="_top">Cppad&nbsp;Swig&nbsp;Modules&nbsp;and&nbsp;Languages</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="library.htm" target="_top">The&nbsp;Cppad&nbsp;Swig&nbsp;Library</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="run_cmake.sh.htm" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="run_cmake.sh.htm" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="testing.htm" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests</a><br>
cppad<b>_</b>cxx<b>_</b>flags&#160;<a href="run_cmake.sh.htm#cppad_cxx_flags" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;cppad_cxx_flags</a><br>
cppad<b>_</b>swig<b>-</b>20180627<b>:</b>&#160;<a href="cppad_swig.htm" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface</a><br>
cppad<b>_</b>swig<b>_</b>lib&#160;<a href="testing.htm#cppad_swig_lib" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;cppad_swig_lib</a><br>
current&#160;<a href="a_fun_ctor.htm" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm#Add Current Directory To Search Path" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Add&nbsp;Current&nbsp;Directory&nbsp;To&nbsp;Search&nbsp;Path</a><br>

<b><big><a name="D">D</a></big></b>
<br>
declare&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
dense&#160;<a href="a_fun_hessian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
directory&#160;<a href="xam.m4.htm#directory" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros:&#160;directory</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm#Add Current Directory To Search Path" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Add&nbsp;Current&nbsp;Directory&nbsp;To&nbsp;Search&nbsp;Path</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="run_cmake.sh.htm#Source Directory" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;Source&nbsp;Directory</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testing.htm#Binary Directory" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;Binary&nbsp;Directory</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_swig.htm#Source Directory" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Source&nbsp;Directory</a><br>
display&#160;<a href="omhelp.m4.htm" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code</a><br>
double<b>_</b>class&#160;<a href="check_swig_xam.pl.htm#double_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;double_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#double_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;double_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#double_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;double_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm#double_class" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;double_class</a><br>
during&#160;<a href="whats_new_2017.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="whats_new_2018.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018</a><br>

<b><big><a name="E">E</a></big></b>
<br>
element<b>_</b>type&#160;<a href="vector_set_get.htm#element_type" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&#160;element_type</a><br>
elements&#160;<a href="vector_set_get.htm" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements</a><br>
elements<b>:</b>&#160;<a href="vector_set_get_xam.py.htm" target="_top">Python:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.pm.htm" target="_top">Perl:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.m.htm" target="_top">Octave:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.cpp.htm" target="_top">C++:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
end<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.End_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.End_</a><br>
entire&#160;<a href="jac_sparsity.htm#Sparsity for Entire Jacobian" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;Sparsity&nbsp;for&nbsp;Entire&nbsp;Jacobian</a><br>
eof<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.Eof_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.Eof_</a><br>
eos<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.Eos_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.Eos_</a><br>
equality&#160;<a href="swig_xam_template_class.htm#equality" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class:&#160;equality</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.htm#equality" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class:&#160;equality</a><br>
error&#160;<a href="error.htm" target="_top">Cppad&nbsp;Swig&nbsp;Error&nbsp;Messaging</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
errors&#160;<a href="error_message.htm#Cppad Errors" target="_top">Exception&nbsp;Handling:&#160;Cppad&nbsp;Errors</a><br>
example&#160;<a href="xam.m4.htm" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.py.htm" target="_top">Python:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.pm.htm" target="_top">Perl:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.m.htm" target="_top">Octave:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.cpp.htm" target="_top">C++:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message.htm#Example" target="_top">Exception&nbsp;Handling:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.py.htm" target="_top">Python:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.pm.htm" target="_top">Perl:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.m.htm" target="_top">Octave:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.cpp.htm" target="_top">C++:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.py.htm" target="_top">Python:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.m.htm" target="_top">Octave:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes.htm#Example" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#Example" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_sparsity.htm#Example" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm#Example" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv.htm#Example" target="_top">Sparse&nbsp;Matrices:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#Example" target="_top">Sparsity&nbsp;Patterns:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.py.htm" target="_top">Python:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.pm.htm" target="_top">Perl:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.m.htm" target="_top">Octave:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.cpp.htm" target="_top">C++:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.py.htm" target="_top">Python:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.pm.htm" target="_top">Perl:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.m.htm" target="_top">Octave:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.cpp.htm" target="_top">C++:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.py.htm" target="_top">Python:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.pm.htm" target="_top">Perl:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.m.htm" target="_top">Octave:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.cpp.htm" target="_top">C++:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.py.htm" target="_top">Python:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.pm.htm" target="_top">Perl:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.m.htm" target="_top">Octave:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.cpp.htm" target="_top">C++:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.py.htm" target="_top">Python:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.pm.htm" target="_top">Perl:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.m.htm" target="_top">Octave:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.cpp.htm" target="_top">C++:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property.htm#Example" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize.htm#Example" target="_top">Optimize&nbsp;an&nbsp;AD&nbsp;Function:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse.htm#Example" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward.htm#Example" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian.htm#Example" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian.htm#Example" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_ctor.htm#Example" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.htm#Example" target="_top">Abort&nbsp;Recording:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.htm#Example" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.py.htm" target="_top">Python:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.pm.htm" target="_top">Perl:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.m.htm" target="_top">Octave:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.cpp.htm" target="_top">C++:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.py.htm" target="_top">Python:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.pm.htm" target="_top">Perl:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.m.htm" target="_top">Octave:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.cpp.htm" target="_top">C++:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get.htm#Example" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size.htm#Example" target="_top">Size&nbsp;of&nbsp;a&nbsp;Vector:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_ctor.htm#Example" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign.htm#Example" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun.htm#Example" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign.htm#Example" target="_top">ad_double&nbsp;Assignment&nbsp;Operators:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare.htm#Example" target="_top">ad_double&nbsp;Comparison&nbsp;Operators:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary.htm#Example" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property.htm#Example" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op.htm#Example" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ctor.htm#Example" target="_top">The&nbsp;a_double&nbsp;Constructor:&#160;Example</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.hpp.htm" target="_top">Example&nbsp;C++&nbsp;Library&nbsp;That&nbsp;is&nbsp;Called&nbsp;by&nbsp;Swig</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++</a><br>
example<b>:</b>&#160;<a href="swig_xam_template_class.hpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_template_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications</a><br>
exception&#160;<a href="error_message_xam.py.htm" target="_top">Python:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.pm.htm" target="_top">Perl:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.m.htm" target="_top">Octave:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.cpp.htm" target="_top">C++:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message.htm#In Try Block.exception" target="_top">Exception&nbsp;Handling:&#160;In&nbsp;Try&nbsp;Block.exception</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message.htm" target="_top">Exception&nbsp;Handling</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm#exception" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;exception</a><br>
exit&#160;<a href="check_swig_xam.pl.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
ext<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.Ext_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.Ext_</a><br>

<b><big><a name="F">F</a></big></b>
<br>
f<b>(</b>x<b>)</b>&#160;<a href="a_fun_reverse.htm#Notation.f(x)" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;Notation.f(x)</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward.htm#f(x)" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;f(x)</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian.htm#f(x)" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;f(x)</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian.htm#f(x)" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;f(x)</a><br>
factorial<b>_</b>by<b>_</b>value&#160;<a href="check_swig_xam.pl.htm#factorial_by_value" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;factorial_by_value</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#factorial_by_value" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;factorial_by_value</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#factorial_by_value" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;factorial_by_value</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.htm#factorial_by_value" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications:&#160;factorial_by_value</a><br>
false<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.False_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.False_</a><br>
file&#160;<a href="xam_file_name.m4.htm" target="_top">Function&nbsp;and&nbsp;File&nbsp;Naming</a><br>
files&#160;<a href="xam.m4.htm" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros</a><br>
flow&#160;<a href="lang_m4.htm#Control Flow Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Control&nbsp;Flow&nbsp;Statements</a><br>
for<b>_</b>&#160;<a href="lang_m4.htm#Control Flow Statements.For_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Control&nbsp;Flow&nbsp;Statements.For_</a><br>
for<b>_</b>jac<b>_</b>sparsity&#160;<a href="jac_sparsity.htm#Purpose.for_jac_sparsity" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;Purpose.for_jac_sparsity</a><br>
formatting&#160;<a href="omhelp.m4.htm#Assumption.Formatting" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code:&#160;Assumption.Formatting</a><br>
forward&#160;<a href="sparse_hes.htm#Uses Forward" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;Uses&nbsp;Forward</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#Uses Forward" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;Uses&nbsp;Forward</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.py.htm" target="_top">Python:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.pm.htm" target="_top">Perl:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.m.htm" target="_top">Octave:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.cpp.htm" target="_top">C++:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward.htm" target="_top">Forward&nbsp;Mode&nbsp;AD</a><br>
fun&#160;<a href="a_double_unary_fun.htm#fun" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&#160;fun</a><br>
function&#160;<a href="xam_file_name.m4.htm" target="_top">Function&nbsp;and&nbsp;File&nbsp;Naming</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm#Function Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Function&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property.htm" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize.htm" target="_top">Optimize&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian.htm" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian.htm" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_swig.htm#C++ Function Speed" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;C++&nbsp;Function&nbsp;Speed</a><br>
functionname<b>_</b>&#160;<a href="omhelp.m4.htm#FunctionName_" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code:&#160;FunctionName_</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam_file_name.m4.htm#FunctionName_" target="_top">Function&nbsp;and&nbsp;File&nbsp;Naming:&#160;FunctionName_</a><br>
functions&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun.htm" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun.htm" target="_top">Cppad&nbsp;Swig&nbsp;AD&nbsp;Functions</a><br>

<b><big><a name="G">G</a></big></b>
<br>
g<b>(</b>t<b>)</b>&#160;<a href="a_fun_reverse.htm#Notation.G(T)" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;Notation.G(T)</a><br>
g<b>(</b>x<b>)</b>&#160;<a href="a_fun_hessian.htm#g(x)" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;g(x)</a><br>
generate&#160;<a href="header.m4.htm" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output</a><br>
generating&#160;<a href="xam.m4.htm" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros</a><br>
get&#160;<a href="run_cmake.sh.htm" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system</a><br>
getting&#160;<a href="vector_set_get_xam.py.htm" target="_top">Python:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.pm.htm" target="_top">Perl:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.m.htm" target="_top">Octave:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.cpp.htm" target="_top">C++:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get.htm" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_swig.htm#Getting Started" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Getting&nbsp;Started</a><br>

<b><big><a name="H">H</a></big></b>
<br>
h&#160;<a href="a_fun_hessian.htm#H" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;H</a><br>
handling&#160;<a href="error_message.htm" target="_top">Exception&nbsp;Handling</a><br>
handling<b>:</b>&#160;<a href="error_message_xam.py.htm" target="_top">Python:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.pm.htm" target="_top">Perl:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.m.htm" target="_top">Octave:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.cpp.htm" target="_top">C++:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
hessian&#160;<a href="sparse_hes_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_sparsity.htm#Sparsity for Component Wise Hessian" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;Sparsity&nbsp;for&nbsp;Component&nbsp;Wise&nbsp;Hessian</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_sparsity.htm" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian.htm" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
hessians&#160;<a href="sparse_hes.htm" target="_top">Computing&nbsp;Sparse&nbsp;Hessians</a><br>
how&#160;<a href="header.m4.htm" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output</a><br>

<b><big><a name="I">I</a></big></b>
<br>
if<b>_</b>&#160;<a href="lang_m4.htm#Control Flow Statements.If_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Control&nbsp;Flow&nbsp;Statements.If_</a><br>
if<b>_</b>false&#160;<a href="a_double_cond_assign.htm#if_false" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;if_false</a><br>
if<b>_</b>true&#160;<a href="a_double_cond_assign.htm#if_true" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;if_true</a><br>
implementation&#160;<a href="swig_xam_template_class.hpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Implementation</a><br>
include&#160;<a href="omhelp.m4.htm" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code</a><br>
includes&#160;<a href="xam.m4.htm#Includes" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros:&#160;Includes</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm#C++ Includes" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;C++&nbsp;Includes</a><br>
independent&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
initialize&#160;<a href="check_swig_xam.pl.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Initialize Error Count" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Initialize&nbsp;Error&nbsp;Count</a><br>
int<b>_</b>array<b>_</b>class&#160;<a href="check_swig_xam.pl.htm#int_array_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;int_array_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#int_array_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;int_array_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#int_array_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;int_array_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm#int_array_class" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;int_array_class</a><br>
int<b>_</b>array<b>_</b>ptr&#160;<a href="check_swig_xam.pl.htm#int_array_ptr" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;int_array_ptr</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#int_array_ptr" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;int_array_ptr</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#int_array_ptr" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;int_array_ptr</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm#int_array_ptr" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;int_array_ptr</a><br>
int<b>_</b>class&#160;<a href="check_swig_xam.pl.htm#int_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;int_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#int_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;int_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#int_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;int_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm#int_class" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;int_class</a><br>
interface&#160;<a href="cppad_swig.htm" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface</a><br>
is&#160;<a href="swig_xam.hpp.htm" target="_top">Example&nbsp;C++&nbsp;Library&nbsp;That&nbsp;is&nbsp;Called&nbsp;by&nbsp;Swig</a><br>

<b><big><a name="J">J</a></big></b>
<br>
j&#160;<a href="a_fun_jacobian.htm#J" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;J</a><br>
jacobian&#160;<a href="sparse_jac_pattern_xam.py.htm" target="_top">Python:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.m.htm" target="_top">Octave:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm#Sparsity for Entire Jacobian" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;Sparsity&nbsp;for&nbsp;Entire&nbsp;Jacobian</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian.htm" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
jacobians&#160;<a href="sparse_jac.htm" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians</a><br>
jacobians<b>:</b>&#160;<a href="sparse_jac_xam.py.htm" target="_top">Python:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.pm.htm" target="_top">Perl:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.m.htm" target="_top">Octave:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.cpp.htm" target="_top">C++:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>

<b><big><a name="K">K</a></big></b>
<br>
k&#160;<a href="sparse_rcv.htm#put.k" target="_top">Sparse&nbsp;Matrices:&#160;put.k</a><br>
&#160;&#160;<a href="sparse_rc.htm#put.k" target="_top">Sparsity&nbsp;Patterns:&#160;put.k</a><br>

<b><big><a name="L">L</a></big></b>
<br>
lang<b>_</b>file<b>_</b>name&#160;<a href="omhelp.m4.htm#Assumption.lang_file_name" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code:&#160;Assumption.lang_file_name</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam_file_name.m4.htm#lang_file_name" target="_top">Function&nbsp;and&nbsp;File&nbsp;Naming:&#160;lang_file_name</a><br>
lang<b>_</b>m4&#160;<a href="omhelp.m4.htm#Assumption.lang_m4" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code:&#160;Assumption.lang_m4</a><br>
language&#160;<a href="lang_name.m4.htm" target="_top">Language&nbsp;Name</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam.m4.htm#language" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros:&#160;language</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam.m4.htm" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="module.htm#Language" target="_top">Cppad&nbsp;Swig&nbsp;Modules&nbsp;and&nbsp;Languages:&#160;Language</a><br>
languages&#160;<a href="module.htm" target="_top">Cppad&nbsp;Swig&nbsp;Modules&nbsp;and&nbsp;Languages</a><br>
left&#160;<a href="a_double_cond_assign.htm#left" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;left</a><br>
library&#160;<a href="library.htm" target="_top">The&nbsp;Cppad&nbsp;Swig&nbsp;Library</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.hpp.htm" target="_top">Example&nbsp;C++&nbsp;Library&nbsp;That&nbsp;is&nbsp;Called&nbsp;by&nbsp;Swig</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_swig.htm" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface</a><br>
license&#160;<a href="cppad_swig.htm#License" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;License</a><br>
load&#160;<a href="check_swig_xam.pl.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>

<b><big><a name="M">M</a></big></b>
<br>
m4&#160;<a href="omhelp.m4.htm" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;<a href="lang_m4.htm" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros</a><br>
&#160;&#160;&#160;<a href="xam.m4.htm#m4 Command" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros:&#160;m4&nbsp;Command</a><br>
&#160;&#160;&#160;<a href="xam.m4.htm" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros</a><br>
m<b>_</b>swig<b>_</b>xam&#160;<a href="swig_xam.i.htm#m_swig_xam" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;m_swig_xam</a><br>
macro&#160;<a href="omhelp.m4.htm" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements</a><br>
macros&#160;<a href="lang_m4.htm" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam.m4.htm" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros</a><br>
matrices&#160;<a href="sparse_rcv.htm" target="_top">Sparse&nbsp;Matrices</a><br>
matrix&#160;<a href="sparse_rcv.htm#matrix" target="_top">Sparse&nbsp;Matrices:&#160;matrix</a><br>
max<b>_</b>array<b>_</b>by<b>_</b>ptr&#160;<a href="swig_xam_function.htm#max_array_by_ptr" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications:&#160;max_array_by_ptr</a><br>
max<b>_</b>std<b>_</b>vector<b>_</b>double&#160;<a href="swig_xam_function.htm#max_std_vector_double" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications:&#160;max_std_vector_double</a><br>
member<b>_</b>&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements.Member_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements.Member_</a><br>
message<b>_</b>of<b>_</b>void&#160;<a href="check_swig_xam.pl.htm#message_of_void" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;message_of_void</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#message_of_void" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;message_of_void</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#message_of_void" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;message_of_void</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.htm#message_of_void" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications:&#160;message_of_void</a><br>
messaging&#160;<a href="error.htm" target="_top">Cppad&nbsp;Swig&nbsp;Error&nbsp;Messaging</a><br>
minus&#160;<a href="a_double_unary_op.htm" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus</a><br>
minus<b>:</b>&#160;<a href="a_double_unary_op_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
mode&#160;<a href="a_fun_reverse_xam.py.htm" target="_top">Python:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.pm.htm" target="_top">Perl:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.m.htm" target="_top">Octave:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.cpp.htm" target="_top">C++:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.py.htm" target="_top">Python:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.pm.htm" target="_top">Perl:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.m.htm" target="_top">Octave:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.cpp.htm" target="_top">C++:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse.htm" target="_top">Reverse&nbsp;Mode&nbsp;AD</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward.htm" target="_top">Forward&nbsp;Mode&nbsp;AD</a><br>
module&#160;<a href="module.htm#Module Name" target="_top">Cppad&nbsp;Swig&nbsp;Modules&nbsp;and&nbsp;Languages:&#160;Module&nbsp;Name</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>
module<b>_</b>&#160;<a href="lang_m4.htm#Module_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Module_</a><br>
module<b>_</b>ref&#160;<a href="sparse_hes.htm#module_ref" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#module_ref" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv.htm#module_ref" target="_top">Sparse&nbsp;Matrices:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#module_ref" target="_top">Sparsity&nbsp;Patterns:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_ctor.htm#module_ref" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.htm#module_ref" target="_top">Abort&nbsp;Recording:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.htm#module_ref" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_ctor.htm#module_ref" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ctor.htm#module_ref" target="_top">The&nbsp;a_double&nbsp;Constructor:&#160;module_ref</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="module.htm#module_ref" target="_top">Cppad&nbsp;Swig&nbsp;Modules&nbsp;and&nbsp;Languages:&#160;module_ref</a><br>
modules&#160;<a href="module.htm" target="_top">Cppad&nbsp;Swig&nbsp;Modules&nbsp;and&nbsp;Languages</a><br>

<b><big><a name="N">N</a></big></b>
<br>
n<b>_</b>sweep&#160;<a href="sparse_hes.htm#n_sweep" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;n_sweep</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#n_sweep" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;n_sweep</a><br>
name&#160;<a href="lang_name.m4.htm" target="_top">Language&nbsp;Name</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="module.htm#Module Name" target="_top">Cppad&nbsp;Swig&nbsp;Modules&nbsp;and&nbsp;Languages:&#160;Module&nbsp;Name</a><br>
naming&#160;<a href="xam_file_name.m4.htm" target="_top">Function&nbsp;and&nbsp;File&nbsp;Naming</a><br>
nc&#160;<a href="sparse_rcv.htm#nc" target="_top">Sparse&nbsp;Matrices:&#160;nc</a><br>
&#160;&#160;&#160;<a href="sparse_rc.htm#nc" target="_top">Sparsity&nbsp;Patterns:&#160;nc</a><br>
near<b>_</b>equal&#160;<a href="a_double_property.htm#near_equal" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object:&#160;near_equal</a><br>
newvar<b>_</b>&#160;<a href="lang_m4.htm#Assignment Statements.NewVar_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Assignment&nbsp;Statements.NewVar_</a><br>
nnz&#160;<a href="sparse_rcv.htm#nnz" target="_top">Sparse&nbsp;Matrices:&#160;nnz</a><br>
&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#nnz" target="_top">Sparsity&nbsp;Patterns:&#160;nnz</a><br>
no&#160;<a href="lang_m4.htm#Module_.No Arguments" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Module_.No&nbsp;Arguments</a><br>
&#160;&#160;&#160;<a href="lang_m4.htm#No Arguments" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments</a><br>
normal<b>_</b>class&#160;<a href="check_swig_xam.pl.htm#normal_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;normal_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#normal_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;normal_class</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#normal_class" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;normal_class</a><br>
normal<b>_</b>class<b>()</b>&#160;<a href="swig_xam_normal_class.htm#normal_class()" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class:&#160;normal_class()</a><br>
normal<b>_</b>class<b>(</b>value<b>)</b>&#160;<a href="swig_xam_normal_class.htm#normal_class(value)" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class:&#160;normal_class(value)</a><br>
not&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;<a href="error_message.htm#Not Thread Safe" target="_top">Exception&nbsp;Handling:&#160;Not&nbsp;Thread&nbsp;Safe</a><br>
not<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.Not_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.Not_</a><br>
notation&#160;<a href="a_fun_reverse.htm#Notation" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;Notation</a><br>
nr&#160;<a href="sparse_rcv.htm#nr" target="_top">Sparse&nbsp;Matrices:&#160;nr</a><br>
&#160;&#160;&#160;<a href="sparse_rc.htm#nr" target="_top">Sparsity&nbsp;Patterns:&#160;nr</a><br>

<b><big><a name="O">O</a></big></b>
<br>
object&#160;<a href="a_fun_ctor.htm" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property.htm" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object</a><br>
octave&#160;<a href="vector_set_get.htm#Octave" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&#160;Octave</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op.htm#Octave" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&#160;Octave</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="testing.htm#Octave" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;Octave</a><br>
octave<b>:</b>&#160;<a href="error_message_xam.m.htm" target="_top">Octave:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.m.htm" target="_top">Octave:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.m.htm" target="_top">Octave:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.m.htm" target="_top">Octave:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.m.htm" target="_top">Octave:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.m.htm" target="_top">Octave:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.m.htm" target="_top">Octave:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.m.htm" target="_top">Octave:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.m.htm" target="_top">Octave:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.m.htm" target="_top">Octave:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
omhelp&#160;<a href="omhelp.m4.htm" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code</a><br>
omhelp<b>_</b>tag&#160;<a href="omhelp.m4.htm#Omhelp_tag" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code:&#160;Omhelp_tag</a><br>
omhelp<b>_</b>title&#160;<a href="omhelp.m4.htm#Omhelp_title" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code:&#160;Omhelp_title</a><br>
one&#160;<a href="lang_m4.htm#Module_.One Argument" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Module_.One&nbsp;Argument</a><br>
op&#160;<a href="a_double_assign.htm#op" target="_top">ad_double&nbsp;Assignment&nbsp;Operators:&#160;op</a><br>
&#160;&#160;&#160;<a href="a_double_compare.htm#op" target="_top">ad_double&nbsp;Comparison&nbsp;Operators:&#160;op</a><br>
&#160;&#160;&#160;<a href="a_double_ad_binary.htm#op" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result:&#160;op</a><br>
operations&#160;<a href="lang_m4.htm#Vector Operations" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Vector&nbsp;Operations</a><br>
operations<b>:</b>&#160;<a href="a_fun_abort_xam.py.htm" target="_top">Python:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.pm.htm" target="_top">Perl:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.m.htm" target="_top">Octave:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.cpp.htm" target="_top">C++:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
operators&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign.htm" target="_top">ad_double&nbsp;Assignment&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare.htm" target="_top">ad_double&nbsp;Comparison&nbsp;Operators</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary.htm" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result</a><br>
operators<b>:</b>&#160;<a href="a_double_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
optimize&#160;<a href="a_fun_optimize_xam.py.htm" target="_top">Python:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.pm.htm" target="_top">Perl:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.m.htm" target="_top">Octave:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.cpp.htm" target="_top">C++:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize.htm" target="_top">Optimize&nbsp;an&nbsp;AD&nbsp;Function</a><br>
optional&#160;<a href="cppad_swig.htm#Supporting Packages.Optional" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Supporting&nbsp;Packages.Optional</a><br>
output&#160;<a href="header.m4.htm" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam.m4.htm#Output" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros:&#160;Output</a><br>

<b><big><a name="P">P</a></big></b>
<br>
p&#160;<a href="a_fun_forward.htm#p" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;p</a><br>
packages&#160;<a href="cppad_swig.htm#Supporting Packages" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Supporting&nbsp;Packages</a><br>
parameter&#160;<a href="a_double_property.htm#parameter" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object:&#160;parameter</a><br>
path&#160;<a href="check_swig_xam.pl.htm#Add Current Directory To Search Path" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Add&nbsp;Current&nbsp;Directory&nbsp;To&nbsp;Search&nbsp;Path</a><br>
pattern&#160;<a href="sparse_hes.htm#pattern" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;pattern</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#pattern" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;pattern</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv.htm#pattern" target="_top">Sparse&nbsp;Matrices:&#160;pattern</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#pattern" target="_top">Sparsity&nbsp;Patterns:&#160;pattern</a><br>
pattern<b>_</b>in&#160;<a href="jac_sparsity.htm#pattern_in" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;pattern_in</a><br>
pattern<b>_</b>out&#160;<a href="hes_sparsity.htm#pattern_out" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;pattern_out</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm#pattern_out" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;pattern_out</a><br>
patterns&#160;<a href="hes_sparsity.htm" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc.htm" target="_top">Sparsity&nbsp;Patterns</a><br>
patterns<b>:</b>&#160;<a href="sparse_hes_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.py.htm" target="_top">Python:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.m.htm" target="_top">Octave:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
perl&#160;<a href="vector_set_get.htm#Perl" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&#160;Perl</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script</a><br>
perl<b>:</b>&#160;<a href="error_message_xam.pm.htm" target="_top">Perl:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.pm.htm" target="_top">Perl:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.pm.htm" target="_top">Perl:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.pm.htm" target="_top">Perl:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.pm.htm" target="_top">Perl:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.pm.htm" target="_top">Perl:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.pm.htm" target="_top">Perl:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.pm.htm" target="_top">Perl:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.pm.htm" target="_top">Perl:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
pl<b>_</b>swig<b>_</b>xam&#160;<a href="swig_xam.i.htm#pl_swig_xam" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;pl_swig_xam</a><br>
plus&#160;<a href="a_double_unary_op_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op.htm" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus</a><br>
previous&#160;<a href="whats_new_2018.htm#Previous Years" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018:&#160;Previous&nbsp;Years</a><br>
properties&#160;<a href="a_fun_property.htm" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property.htm" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object</a><br>
properties<b>:</b>&#160;<a href="a_fun_property_xam.py.htm" target="_top">Python:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.pm.htm" target="_top">Perl:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.m.htm" target="_top">Octave:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.cpp.htm" target="_top">C++:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
prototypes&#160;<a href="swig_xam_template_class.htm#Prototypes" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class:&#160;Prototypes</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.htm#Prototypes" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class:&#160;Prototypes</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.htm#Prototypes" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications:&#160;Prototypes</a><br>
purpose&#160;<a href="lang_m4.htm#Purpose" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes.htm#Purpose" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#Purpose" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_sparsity.htm#Purpose" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm#Purpose" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize.htm#Purpose" target="_top">Optimize&nbsp;an&nbsp;AD&nbsp;Function:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.htm#Purpose" target="_top">Abort&nbsp;Recording:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.htm#Purpose" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_ctor.htm#Purpose" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign.htm#Purpose" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ctor.htm#Purpose" target="_top">The&nbsp;a_double&nbsp;Constructor:&#160;Purpose</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_swig.htm#Purpose" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Purpose</a><br>
put&#160;<a href="sparse_rcv.htm#put" target="_top">Sparse&nbsp;Matrices:&#160;put</a><br>
&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#put" target="_top">Sparsity&nbsp;Patterns:&#160;put</a><br>
py<b>_</b>swig<b>_</b>xam&#160;<a href="swig_xam.i.htm#py_swig_xam" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;py_swig_xam</a><br>
python&#160;<a href="check_swig_xam.py.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script</a><br>
python<b>:</b>&#160;<a href="error_message_xam.py.htm" target="_top">Python:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.py.htm" target="_top">Python:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.py.htm" target="_top">Python:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.py.htm" target="_top">Python:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.py.htm" target="_top">Python:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.py.htm" target="_top">Python:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.py.htm" target="_top">Python:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.py.htm" target="_top">Python:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.py.htm" target="_top">Python:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.py.htm" target="_top">Python:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>

<b><big><a name="Q">Q</a></big></b>
<br>
q&#160;<a href="a_fun_reverse.htm#q" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;q</a><br>

<b><big><a name="R">R</a></big></b>
<br>
raise<b>_</b>exception&#160;<a href="check_swig_xam.pl.htm#raise_exception" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;raise_exception</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#raise_exception" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;raise_exception</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#raise_exception" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;raise_exception</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.htm#raise_exception" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications:&#160;raise_exception</a><br>
recording&#160;<a href="a_fun_abort_xam.py.htm" target="_top">Python:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.pm.htm" target="_top">Perl:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.m.htm" target="_top">Octave:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.cpp.htm" target="_top">C++:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_ctor.htm" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.htm" target="_top">Abort&nbsp;Recording</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
required&#160;<a href="cppad_swig.htm#Supporting Packages.Required" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Supporting&nbsp;Packages.Required</a><br>
resize&#160;<a href="sparse_rc.htm#resize" target="_top">Sparsity&nbsp;Patterns:&#160;resize</a><br>
result&#160;<a href="lang_name.m4.htm#Result" target="_top">Language&nbsp;Name:&#160;Result</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun.htm" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary.htm" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result</a><br>
result<b>:</b>&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
return<b>_</b>&#160;<a href="lang_m4.htm#Function Statements.Return_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Function&nbsp;Statements.Return_</a><br>
rev<b>_</b>jac<b>_</b>sparsity&#160;<a href="jac_sparsity.htm#Purpose.rev_jac_sparsity" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;Purpose.rev_jac_sparsity</a><br>
reverse&#160;<a href="a_fun_reverse_xam.py.htm" target="_top">Python:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.pm.htm" target="_top">Perl:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.m.htm" target="_top">Octave:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.cpp.htm" target="_top">C++:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse.htm" target="_top">Reverse&nbsp;Mode&nbsp;AD</a><br>
right&#160;<a href="a_double_cond_assign.htm#right" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;right</a><br>
row&#160;<a href="sparse_rcv.htm#row" target="_top">Sparse&nbsp;Matrices:&#160;row</a><br>
&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#row" target="_top">Sparsity&nbsp;Patterns:&#160;row</a><br>
row<b>_</b>major&#160;<a href="sparse_rcv.htm#row_major" target="_top">Sparse&nbsp;Matrices:&#160;row_major</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#row_major" target="_top">Sparsity&nbsp;Patterns:&#160;row_major</a><br>
running&#160;<a href="testing.htm" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests</a><br>

<b><big><a name="S">S</a></big></b>
<br>
safe&#160;<a href="error_message.htm#Not Thread Safe" target="_top">Exception&nbsp;Handling:&#160;Not&nbsp;Thread&nbsp;Safe</a><br>
scalars&#160;<a href="a_double.htm" target="_top">Cppad&nbsp;Swig&nbsp;AD&nbsp;Scalars</a><br>
script&#160;<a href="check_swig_xam.pl.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script</a><br>
search&#160;<a href="check_swig_xam.pl.htm#Add Current Directory To Search Path" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Add&nbsp;Current&nbsp;Directory&nbsp;To&nbsp;Search&nbsp;Path</a><br>
select<b>_</b>domain&#160;<a href="hes_sparsity.htm#select_domain" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;select_domain</a><br>
select<b>_</b>range&#160;<a href="hes_sparsity.htm#select_range" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;select_range</a><br>
set&#160;<a href="check_swig_xam.pl.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Set Exit Code" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Set&nbsp;Exit&nbsp;Code</a><br>
setting&#160;<a href="vector_set_get_xam.py.htm" target="_top">Python:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.pm.htm" target="_top">Perl:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.m.htm" target="_top">Octave:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.cpp.htm" target="_top">C++:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get.htm" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements</a><br>
settings&#160;<a href="run_cmake.sh.htm#System Settings" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;System&nbsp;Settings</a><br>
showing&#160;<a href="header.m4.htm" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output</a><br>
size&#160;<a href="vector_size_xam.py.htm" target="_top">Python:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.pm.htm" target="_top">Perl:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.m.htm" target="_top">Octave:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.cpp.htm" target="_top">C++:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size.htm" target="_top">Size&nbsp;of&nbsp;a&nbsp;Vector</a><br>
size<b>_</b>dep&#160;<a href="a_fun_property.htm#size_dep" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;size_dep</a><br>
size<b>_</b>ind&#160;<a href="a_fun_property.htm#size_ind" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;size_ind</a><br>
size<b>_</b>op&#160;<a href="a_fun_property.htm#size_op" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;size_op</a><br>
size<b>_</b>var&#160;<a href="a_fun_property.htm#size_var" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;size_var</a><br>
source&#160;<a href="omhelp.m4.htm" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="run_cmake.sh.htm#Source Directory" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;Source&nbsp;Directory</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="cppad_swig.htm#Source Directory" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Source&nbsp;Directory</a><br>
sparse&#160;<a href="sparse_jac_xam.py.htm" target="_top">Python:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.pm.htm" target="_top">Perl:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.m.htm" target="_top">Octave:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.cpp.htm" target="_top">C++:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes.htm" target="_top">Computing&nbsp;Sparse&nbsp;Hessians</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv.htm" target="_top">Sparse&nbsp;Matrices</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse.htm" target="_top">Cppad&nbsp;Swig&nbsp;Sparse&nbsp;Calculation</a><br>
sparse<b>_</b>jac<b>_</b>for&#160;<a href="sparse_jac.htm#sparse_jac_for" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;sparse_jac_for</a><br>
sparse<b>_</b>jac<b>_</b>rev&#160;<a href="sparse_jac.htm#sparse_jac_rev" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;sparse_jac_rev</a><br>
sparsity&#160;<a href="sparse_hes_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.py.htm" target="_top">Python:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.m.htm" target="_top">Octave:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_sparsity.htm#Sparsity for Component Wise Hessian" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;Sparsity&nbsp;for&nbsp;Component&nbsp;Wise&nbsp;Hessian</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_sparsity.htm" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm#Sparsity for Entire Jacobian" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;Sparsity&nbsp;for&nbsp;Entire&nbsp;Jacobian</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc.htm" target="_top">Sparsity&nbsp;Patterns</a><br>
specific&#160;<a href="lang_m4.htm" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam.m4.htm" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros</a><br>
specifications&#160;<a href="swig_xam_function.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications</a><br>
speed&#160;<a href="cppad_swig.htm#C++ Function Speed" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;C++&nbsp;Function&nbsp;Speed</a><br>
start&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
started&#160;<a href="cppad_swig.htm#Getting Started" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Getting&nbsp;Started</a><br>
statements&#160;<a href="lang_m4.htm#Control Flow Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Control&nbsp;Flow&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm#Function Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Function&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm#Assignment Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Assignment&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements</a><br>
stop&#160;<a href="a_fun_ctor.htm" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object</a><br>
store&#160;<a href="a_fun_ctor.htm" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object</a><br>
stringequal<b>_</b>&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements.StringEqual_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements.StringEqual_</a><br>
subset&#160;<a href="sparse_hes.htm#subset" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;subset</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#subset" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;subset</a><br>
support&#160;<a href="cppad_swig.htm#Support" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Support</a><br>
supporting&#160;<a href="cppad_swig.htm#Supporting Packages" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface:&#160;Supporting&nbsp;Packages</a><br>
swig&#160;<a href="whats_new_2017.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2017</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="whats_new_2018.htm" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.py.htm" target="_top">Python:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.pm.htm" target="_top">Perl:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.m.htm" target="_top">Octave:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.cpp.htm" target="_top">C++:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_ctor.htm" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="error.htm" target="_top">Cppad&nbsp;Swig&nbsp;Error&nbsp;Messaging</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse.htm" target="_top">Cppad&nbsp;Swig&nbsp;Sparse&nbsp;Calculation</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun.htm" target="_top">Cppad&nbsp;Swig&nbsp;AD&nbsp;Functions</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector.htm" target="_top">Cppad&nbsp;Swig&nbsp;Vectors</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double.htm" target="_top">Cppad&nbsp;Swig&nbsp;AD&nbsp;Scalars</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="module.htm" target="_top">Cppad&nbsp;Swig&nbsp;Modules&nbsp;and&nbsp;Languages</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="library.htm" target="_top">The&nbsp;Cppad&nbsp;Swig&nbsp;Library</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_template_class.hpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.cpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_template_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_function.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Function&nbsp;Specifications</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.hpp.htm" target="_top">Example&nbsp;C++&nbsp;Library&nbsp;That&nbsp;is&nbsp;Called&nbsp;by&nbsp;Swig</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="run_cmake.sh.htm" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="testing.htm" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_swig.htm" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface</a><br>
swig<b>_</b>cxx<b>_</b>flags&#160;<a href="run_cmake.sh.htm#swig_cxx_flags" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;swig_cxx_flags</a><br>
swig<b>_</b>xam<b>.</b>hpp&#160;<a href="swig_xam.i.htm#swig_xam.hpp" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;swig_xam.hpp</a><br>
syntax&#160;<a href="omhelp.m4.htm#Syntax" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="lang_name.m4.htm#Syntax" target="_top">Language&nbsp;Name:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="header.m4.htm#Syntax" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam_file_name.m4.htm#Syntax" target="_top">Function&nbsp;and&nbsp;File&nbsp;Naming:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam.m4.htm#Syntax" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="error_message.htm#Syntax" target="_top">Exception&nbsp;Handling:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes.htm#Syntax" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#Syntax" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="hes_sparsity.htm#Syntax" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="jac_sparsity.htm#Syntax" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv.htm#Syntax" target="_top">Sparse&nbsp;Matrices:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc.htm#Syntax" target="_top">Sparsity&nbsp;Patterns:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property.htm#Syntax" target="_top">Properties&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize.htm#Syntax" target="_top">Optimize&nbsp;an&nbsp;AD&nbsp;Function:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse.htm#Syntax" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward.htm#Syntax" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian.htm#Syntax" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian.htm#Syntax" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_ctor.htm#Syntax" target="_top">Stop&nbsp;Current&nbsp;Recording&nbsp;and&nbsp;Store&nbsp;in&nbsp;an&nbsp;a_fun&nbsp;Object:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="abort_recording.htm#Syntax" target="_top">Abort&nbsp;Recording:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="independent.htm#Syntax" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get.htm#Syntax" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size.htm#Syntax" target="_top">Size&nbsp;of&nbsp;a&nbsp;Vector:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_ctor.htm#Syntax" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign.htm#Syntax" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun.htm#Syntax" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign.htm#Syntax" target="_top">ad_double&nbsp;Assignment&nbsp;Operators:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare.htm#Syntax" target="_top">ad_double&nbsp;Comparison&nbsp;Operators:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary.htm#Syntax" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_property.htm#Syntax" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op.htm#Syntax" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_ctor.htm#Syntax" target="_top">The&nbsp;a_double&nbsp;Constructor:&#160;Syntax</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="run_cmake.sh.htm#Syntax" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;Syntax</a><br>
system&#160;<a href="run_cmake.sh.htm#System Settings" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;System&nbsp;Settings</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="run_cmake.sh.htm" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system</a><br>

<b><big><a name="T">T</a></big></b>
<br>
target&#160;<a href="a_double_cond_assign.htm#target" target="_top">AD&nbsp;Conditional&nbsp;Assignment:&#160;target</a><br>
taylor&#160;<a href="a_fun_forward.htm#Taylor Coefficient" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;Taylor&nbsp;Coefficient</a><br>
template&#160;<a href="swig_xam_template_class.hpp.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class&nbsp;Implementation</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_template_class.htm" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class</a><br>
template<b>_</b>class<b>(</b>value<b>)</b>&#160;<a href="swig_xam_template_class.htm#template_class(value)" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class:&#160;template_class(value)</a><br>
test&#160;<a href="error_message_xam.py.htm" target="_top">Python:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.pm.htm" target="_top">Perl:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.m.htm" target="_top">Octave:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="error_message_xam.cpp.htm" target="_top">C++:&nbsp;Cppad&nbsp;Swig&nbsp;Exception&nbsp;Handling:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.py.htm" target="_top">Python:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.pm.htm" target="_top">Perl:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.m.htm" target="_top">Octave:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_xam.cpp.htm" target="_top">C++:&nbsp;Computing&nbsp;Sparse&nbsp;Jacobians:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.py.htm" target="_top">Python:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.m.htm" target="_top">Octave:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_hes_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Hessian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.py.htm" target="_top">Python:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.pm.htm" target="_top">Perl:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.m.htm" target="_top">Octave:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac_pattern_xam.cpp.htm" target="_top">C++:&nbsp;Jacobian&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rcv_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.py.htm" target="_top">Python:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.pm.htm" target="_top">Perl:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.m.htm" target="_top">Octave:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_rc_xam.cpp.htm" target="_top">C++:&nbsp;Sparsity&nbsp;Patterns:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.py.htm" target="_top">Python:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.pm.htm" target="_top">Perl:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.m.htm" target="_top">Octave:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_property_xam.cpp.htm" target="_top">C++:&nbsp;a_fun&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.py.htm" target="_top">Python:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.pm.htm" target="_top">Perl:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.m.htm" target="_top">Octave:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_optimize_xam.cpp.htm" target="_top">C++:&nbsp;Optimize&nbsp;an&nbsp;a_fun:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.py.htm" target="_top">Python:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.pm.htm" target="_top">Perl:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.m.htm" target="_top">Octave:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_reverse_xam.cpp.htm" target="_top">C++:&nbsp;Reverse&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.py.htm" target="_top">Python:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.pm.htm" target="_top">Perl:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.m.htm" target="_top">Octave:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward_xam.cpp.htm" target="_top">C++:&nbsp;Forward&nbsp;Mode&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.py.htm" target="_top">Python:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.pm.htm" target="_top">Perl:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.m.htm" target="_top">Octave:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_abort_xam.cpp.htm" target="_top">C++:&nbsp;Abort&nbsp;Recording&nbsp;a_double&nbsp;Operations:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.py.htm" target="_top">Python:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.pm.htm" target="_top">Perl:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.m.htm" target="_top">Octave:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.cpp.htm" target="_top">C++:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.py.htm" target="_top">Python:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.pm.htm" target="_top">Perl:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.m.htm" target="_top">Octave:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.cpp.htm" target="_top">C++:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_cond_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Conditional&nbsp;Assignment:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_assign_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Assignment&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_compare_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Comparison&nbsp;Operators:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_property_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Properties:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
test<b>:</b>&#160;<a href="check_swig_xam.pl.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script</a><br>
test<b>_</b>cppad&#160;<a href="run_cmake.sh.htm#test_cppad" target="_top">Get&nbsp;Cppad&nbsp;and&nbsp;Configure&nbsp;Cppad&nbsp;Swig&nbsp;for&nbsp;A&nbsp;system:&#160;test_cppad</a><br>
tests&#160;<a href="testing.htm#Available Tests" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests:&#160;Available&nbsp;Tests</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="testing.htm" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests</a><br>
that&#160;<a href="omhelp.m4.htm" target="_top">M4&nbsp;Macro&nbsp;That&nbsp;Include&nbsp;Omhelp&nbsp;to&nbsp;Display&nbsp;Source&nbsp;Code</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.hpp.htm" target="_top">Example&nbsp;C++&nbsp;Library&nbsp;That&nbsp;is&nbsp;Called&nbsp;by&nbsp;Swig</a><br>
the&#160;<a href="a_double_ctor.htm" target="_top">The&nbsp;a_double&nbsp;Constructor</a><br>
&#160;&#160;&#160;&#160;<a href="library.htm" target="_top">The&nbsp;Cppad&nbsp;Swig&nbsp;Library</a><br>
&#160;&#160;&#160;&#160;<a href="check_swig_xam.pl.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>
&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>
&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#Load the Module" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;Load&nbsp;the&nbsp;Module</a><br>
&#160;&#160;&#160;&#160;<a href="testing.htm" target="_top">Running&nbsp;the&nbsp;Cppad&nbsp;Swig&nbsp;Tests</a><br>
this&#160;<a href="header.m4.htm" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output</a><br>
thread&#160;<a href="error_message.htm#Not Thread Safe" target="_top">Exception&nbsp;Handling:&#160;Not&nbsp;Thread&nbsp;Safe</a><br>
true<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.True_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.True_</a><br>
try&#160;<a href="error_message.htm#In Try Block" target="_top">Exception&nbsp;Handling:&#160;In&nbsp;Try&nbsp;Block</a><br>
try<b>_</b>&#160;<a href="lang_m4.htm#No Arguments.Try_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;No&nbsp;Arguments.Try_</a><br>
type&#160;<a href="swig_xam_template_class.htm#Type" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class:&#160;Type</a><br>

<b><big><a name="U">U</a></big></b>
<br>
u&#160;<a href="vector_set_get.htm#u" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&#160;u</a><br>
unary&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun.htm" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_op.htm" target="_top">a_double&nbsp;Unary&nbsp;Plus&nbsp;and&nbsp;Minus</a><br>
uses&#160;<a href="sparse_hes.htm#Uses Forward" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;Uses&nbsp;Forward</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#Uses Forward" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;Uses&nbsp;Forward</a><br>
using&#160;<a href="xam.m4.htm" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_hessian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Hessian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.py.htm" target="_top">Python:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.pm.htm" target="_top">Perl:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.m.htm" target="_top">Octave:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="a_fun_jacobian_xam.cpp.htm" target="_top">C++:&nbsp;Dense&nbsp;Jacobian&nbsp;Using&nbsp;AD:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++</a><br>

<b><big><a name="V">V</a></big></b>
<br>
v&#160;<a href="sparse_rcv.htm#put.v" target="_top">Sparse&nbsp;Matrices:&#160;put.v</a><br>
&#160;&#160;<a href="vector_set_get.htm#v" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&#160;v</a><br>
&#160;&#160;<a href="vector_size.htm#v" target="_top">Size&nbsp;of&nbsp;a&nbsp;Vector:&#160;v</a><br>
val&#160;<a href="sparse_rcv.htm#val" target="_top">Sparse&nbsp;Matrices:&#160;val</a><br>
value&#160;<a href="a_double_property.htm#value" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object:&#160;value</a><br>
value<b>()</b>&#160;<a href="swig_xam_template_class.htm#value()" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Template&nbsp;Class:&#160;value()</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam_normal_class.htm#value()" target="_top">Swig&nbsp;Example:&nbsp;C++&nbsp;Class:&#160;value()</a><br>
var<b>_</b>&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements.Var_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements.Var_</a><br>
variable&#160;<a href="a_double_property.htm#variable" target="_top">Properties&nbsp;of&nbsp;an&nbsp;a_double&nbsp;Object:&#160;variable</a><br>
variables&#160;<a href="independent.htm" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording</a><br>
vec<b>_</b>a<b>_</b>double&#160;<a href="vector_ctor.htm#vec_a_double" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors:&#160;vec_a_double</a><br>
vec<b>_</b>bool&#160;<a href="vector_ctor.htm#vec_bool" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors:&#160;vec_bool</a><br>
vec<b>_</b>double&#160;<a href="vector_ctor.htm#vec_double" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors:&#160;vec_double</a><br>
vec<b>_</b>int&#160;<a href="vector_ctor.htm#vec_int" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors:&#160;vec_int</a><br>
vecget<b>_</b>&#160;<a href="lang_m4.htm#Vector Operations.VecGet_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Vector&nbsp;Operations.VecGet_</a><br>
vecset<b>_</b>&#160;<a href="lang_m4.htm#Vector Operations.VecSet_" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Vector&nbsp;Operations.VecSet_</a><br>
vector&#160;<a href="lang_m4.htm#Vector Operations" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Vector&nbsp;Operations</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.py.htm" target="_top">Python:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.pm.htm" target="_top">Perl:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.m.htm" target="_top">Octave:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get_xam.cpp.htm" target="_top">C++:&nbsp;Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_set_get.htm" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size.htm" target="_top">Size&nbsp;of&nbsp;a&nbsp;Vector</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_ctor.htm" target="_top">Cppad&nbsp;Swig&nbsp;Vector&nbsp;Constructors</a><br>
vector<b>_</b>double&#160;<a href="check_swig_xam.pl.htm#vector_double" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Perl&nbsp;Script:&#160;vector_double</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.m.htm#vector_double" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Octave&nbsp;Script:&#160;vector_double</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="check_swig_xam.py.htm#vector_double" target="_top">Swig&nbsp;Example&nbsp;/&nbsp;Test:&nbsp;Python&nbsp;Script:&#160;vector_double</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm#vector_double" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++:&#160;vector_double</a><br>
vectors&#160;<a href="vector.htm" target="_top">Cppad&nbsp;Swig&nbsp;Vectors</a><br>
vectors<b>:</b>&#160;<a href="vector_size_xam.py.htm" target="_top">Python:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.pm.htm" target="_top">Perl:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.m.htm" target="_top">Octave:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="vector_size_xam.cpp.htm" target="_top">C++:&nbsp;Size&nbsp;of&nbsp;Vectors:&nbsp;Example&nbsp;and&nbsp;Test</a><br>

<b><big><a name="W">W</a></big></b>
<br>
w&#160;<a href="a_fun_hessian.htm#w" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;w</a><br>
wise&#160;<a href="hes_sparsity.htm#Sparsity for Component Wise Hessian" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;Sparsity&nbsp;for&nbsp;Component&nbsp;Wise&nbsp;Hessian</a><br>
with&#160;<a href="lang_m4.htm#Macro With Arguments That are Not Statements" target="_top">Language&nbsp;Specific&nbsp;M4&nbsp;Macros:&#160;Macro&nbsp;With&nbsp;Arguments&nbsp;That&nbsp;are&nbsp;Not&nbsp;Statements</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.py.htm" target="_top">Python:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.pm.htm" target="_top">Perl:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.m.htm" target="_top">Octave:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary_xam.cpp.htm" target="_top">C++:&nbsp;a_double&nbsp;Binary&nbsp;Operators&nbsp;With&nbsp;AD&nbsp;Result:&nbsp;Example&nbsp;and&nbsp;Test</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_unary_fun.htm" target="_top">Unary&nbsp;Functions&nbsp;with&nbsp;AD&nbsp;Result</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_double_ad_binary.htm" target="_top">ad_double&nbsp;Binary&nbsp;Operators&nbsp;with&nbsp;an&nbsp;AD&nbsp;Result</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="swig_xam.i.htm" target="_top">Example&nbsp;Using&nbsp;Swig&nbsp;with&nbsp;C++</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="cppad_swig.htm" target="_top">cppad_swig-20180627:&nbsp;A&nbsp;C++&nbsp;AD&nbsp;Library&nbsp;with&nbsp;a&nbsp;Swig&nbsp;Interface</a><br>
work&#160;<a href="sparse_hes.htm#work" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;work</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="sparse_jac.htm#work" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;work</a><br>

<b><big><a name="X">X</a></big></b>
<br>
x&#160;<a href="sparse_hes.htm#x" target="_top">Computing&nbsp;Sparse&nbsp;Hessians:&#160;x</a><br>
&#160;&#160;<a href="sparse_jac.htm#x" target="_top">Computing&nbsp;Sparse&nbsp;Jacobians:&#160;x</a><br>
&#160;&#160;<a href="hes_sparsity.htm#x" target="_top">Hessian&nbsp;Sparsity&nbsp;Patterns:&#160;x</a><br>
&#160;&#160;<a href="jac_sparsity.htm#x" target="_top">Jacobian&nbsp;Sparsity&nbsp;Patterns:&#160;x</a><br>
&#160;&#160;<a href="a_fun_hessian.htm#x" target="_top">Hessian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;x</a><br>
&#160;&#160;<a href="a_fun_jacobian.htm#x" target="_top">Jacobian&nbsp;of&nbsp;an&nbsp;AD&nbsp;Function:&#160;x</a><br>
&#160;&#160;<a href="independent.htm#x" target="_top">Declare&nbsp;Independent&nbsp;Variables&nbsp;and&nbsp;Start&nbsp;Recording:&#160;x</a><br>
&#160;&#160;<a href="vector_set_get.htm#x" target="_top">Setting&nbsp;and&nbsp;Getting&nbsp;Vector&nbsp;Elements:&#160;x</a><br>
x<b>(</b>t<b>)</b>&#160;<a href="a_fun_reverse.htm#Notation.X(t), S" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;Notation.X(t),&nbsp;S</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward.htm#X(t)" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;X(t)</a><br>
xam<b>_</b>file<b>_</b>name&#160;<a href="header.m4.htm#xam_file_name" target="_top">Comment&nbsp;Showing&nbsp;How&nbsp;to&nbsp;Generate&nbsp;This&nbsp;Output:&#160;xam_file_name</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam_file_name.m4.htm#xam_file_name" target="_top">Function&nbsp;and&nbsp;File&nbsp;Naming:&#160;xam_file_name</a><br>
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;<a href="xam.m4.htm#xam_file_name" target="_top">Generating&nbsp;Language&nbsp;Specific&nbsp;Example&nbsp;Files&nbsp;Using&nbsp;M4&nbsp;Macros:&#160;xam_file_name</a><br>
xp&#160;<a href="a_fun_forward.htm#xp" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;xp</a><br>
xq&#160;<a href="a_fun_reverse.htm#xq" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;xq</a><br>

<b><big><a name="Y">Y</a></big></b>
<br>
y<b>(</b>t<b>)</b>&#160;<a href="a_fun_reverse.htm#Notation.Y(t), T" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;Notation.Y(t),&nbsp;T</a><br>
&#160;&#160;&#160;&#160;&#160;<a href="a_fun_forward.htm#Y(t)" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;Y(t)</a><br>
years&#160;<a href="whats_new_2018.htm#Previous Years" target="_top">Cppad&nbsp;Swig&nbsp;Changes&nbsp;During&nbsp;2018:&#160;Previous&nbsp;Years</a><br>
yp&#160;<a href="a_fun_forward.htm#yp" target="_top">Forward&nbsp;Mode&nbsp;AD:&#160;yp</a><br>
yq&#160;<a href="a_fun_reverse.htm#yq" target="_top">Reverse&nbsp;Mode&nbsp;AD:&#160;yq</a><br>

</body>
</html>
