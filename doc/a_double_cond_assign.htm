<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>AD Conditional Assignment</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="AD Conditional Assignment">
<meta name="keywords" id="keywords" content=" ad conditional assignment syntax purpose target cop left right if_true if_false example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_a_double_cond_assign_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_swig" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="a_double_unary_fun_xam.py.htm" target="_top">Prev</a>
</td><td><a href="a_double_cond_assign_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_swig</option>
<option>library</option>
<option>a_double</option>
<option>a_double_cond_assign</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_swig-&gt;</option>
<option>testing</option>
<option>swig_xam.i</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>library-&gt;</option>
<option>module</option>
<option>a_double</option>
<option>vector</option>
<option>a_fun</option>
<option>sparse</option>
<option>error</option>
<option>xam.m4</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>a_double-&gt;</option>
<option>a_double_ctor</option>
<option>a_double_unary_op</option>
<option>a_double_property</option>
<option>a_double_ad_binary</option>
<option>a_double_compare</option>
<option>a_double_assign</option>
<option>a_double_unary_fun</option>
<option>a_double_cond_assign</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>a_double_cond_assign-&gt;</option>
<option>a_double_cond_assign_xam.cpp</option>
<option>a_double_cond_assign_xam.m</option>
<option>a_double_cond_assign_xam.pm</option>
<option>a_double_cond_assign_xam.py</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Purpose</option>
<option>target</option>
<option>cop</option>
<option>left</option>
<option>right</option>
<option>if_true</option>
<option>if_false</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@


<center><b><big><big>AD Conditional Assignment</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>target</span></font></i><font color="blue"><span style='white-space: nowrap'>.cond_assign(</span></font><i><font color="black"><span style='white-space: nowrap'>cop</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>left</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>right</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>if_true</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>if_false</span></font></i><font color="blue"><span style='white-space: nowrap'>)<br>
</span></font></code>
<br>
<b><big><a name="Purpose" id="Purpose">Purpose</a></big></b>
<br>
The code

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>left</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>cop</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>right</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>target</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>if_true</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>target</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>if_false</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
records either the true or false case depending on the value
of 
<code><i><font color="black"><span style='white-space: nowrap'>left</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>right</span></font></i></code>
; see <a href="a_fun_ctor.htm" target="_top"><span style='white-space: nowrap'>a_fun_ctor</span></a>
.
If 
<code><i><font color="black"><span style='white-space: nowrap'>left</span></font></i></code>
 or 
<code><i><font color="black"><span style='white-space: nowrap'>right</span></font></i></code>
 is a
<a href="a_double_property.htm#variable" target="_top"><span style='white-space: nowrap'>variable</span></a>
,
it may be desirable to switch between 
<code><i><font color="black"><span style='white-space: nowrap'>if_true</span></font></i></code>
 and 
<code><i><font color="black"><span style='white-space: nowrap'>if_false</span></font></i></code>

depending of the value of the independent variable during
calls to order zero <a href="a_fun_forward.htm" target="_top"><span style='white-space: nowrap'>a_fun_forward</span></a>
.
The <code><font color="blue">cond_assign</font></code> does this.

<br>
<br>
<b><big><a name="target" id="target">target</a></big></b>
<br>
This object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a_double&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>target</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
<br>
<b><big><a name="cop" id="cop">cop</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;char&nbsp;*cop<br>
</span></font></code>
The comparison is

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>left</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>cop</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>right</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
where 
<code><i><font color="black"><span style='white-space: nowrap'>cop</span></font></i></code>
 is one of the following:
<table><tr><td align='left'  valign='top'>


<code><i><font color="black"><span style='white-space: nowrap'>cop</span></font></i></code>
  </td><td align='left'  valign='top'>
                       </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">&lt;</font></code>     </td><td align='left'  valign='top'>
 less than             </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">&lt;=</font></code>    </td><td align='left'  valign='top'>
 less than or equal    </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">==</font></code>    </td><td align='left'  valign='top'>
 equal                 </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">&gt;=</font></code>    </td><td align='left'  valign='top'>
 greater than or equal </td></tr><tr><td align='left'  valign='top'>

<code><font color="blue">&gt;</font></code>     </td><td align='left'  valign='top'>
 greater than
</td></tr>
</table>
<br>
<b><big><a name="left" id="left">left</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;a_double&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>left</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the left operand in the comparison.

<br>
<br>
<b><big><a name="right" id="right">right</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;a_double&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>right</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the right operand in the comparison.

<br>
<br>
<b><big><a name="if_true" id="if_true">if_true</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;a_double&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>if_true</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the value assigned to 
<code><i><font color="black"><span style='white-space: nowrap'>ad</span></font></i></code>
 if the result
of the comparison is true.

<br>
<br>
<b><big><a name="if_false" id="if_false">if_false</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;a_double&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>if_false</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
It specifies the value assigned to 
<code><i><font color="black"><span style='white-space: nowrap'>ad</span></font></i></code>
 if the result
of the comparison is false.



<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
<a href="a_double_cond_assign_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>C++</span></a>
,
<a href="a_double_cond_assign_xam.m.htm" target="_top"><span style='white-space: nowrap'>Octave</span></a>
,
<a href="a_double_cond_assign_xam.pm.htm" target="_top"><span style='white-space: nowrap'>Perl</span></a>
,
<a href="a_double_cond_assign_xam.py.htm" target="_top"><span style='white-space: nowrap'>Python</span></a>
.


<hr>Input File: lib/a_double.cpp

</body>
</html>
