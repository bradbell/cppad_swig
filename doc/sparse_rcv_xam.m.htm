<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Octave: Sparsity Patterns: Example and Test</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Octave: Sparsity Patterns: Example and Test">
<meta name="keywords" id="keywords" content=" octave: sparsity patterns: example test ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_sparse_rcv_xam.m_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_swig" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="sparse_rcv_xam.cpp.htm" target="_top">Prev</a>
</td><td><a href="sparse_rcv_xam.pm.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_swig</option>
<option>library</option>
<option>sparse</option>
<option>sparse_rcv</option>
<option>sparse_rcv_xam.m</option>
</select>
</td>
<td>
<select onchange='choose_down4(this)'>
<option>cppad_swig-&gt;</option>
<option>testing</option>
<option>swig_xam.i</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>library-&gt;</option>
<option>module</option>
<option>a_double</option>
<option>vector</option>
<option>a_fun</option>
<option>sparse</option>
<option>error</option>
<option>xam.m4</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>sparse-&gt;</option>
<option>sparse_rc</option>
<option>sparse_rcv</option>
<option>jac_sparsity</option>
<option>hes_sparsity</option>
<option>sparse_jac</option>
<option>sparse_hes</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>sparse_rcv-&gt;</option>
<option>sparse_rcv_xam.cpp</option>
<option>sparse_rcv_xam.m</option>
<option>sparse_rcv_xam.pm</option>
<option>sparse_rcv_xam.py</option>
</select>
</td>
<td>sparse_rcv_xam.m</td>
<td>Headings</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Octave: Sparsity Patterns: Example and Test</big></big></b></center>
<pre><tt><b><font color="#0000FF">function</font></b> ok = <b><font color="#000000">sparse_rcv_xam</font></b>()
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% load the Cppad Swig library</font></i>
     m_cppad
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% initialize return variable</font></i>
     ok = true;
     <i><font color="#9A1900">% -----------------------------------------------------------------------</font></i>
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% create sparsity pattern for n by n identity matrix</font></i>
     pattern = m_cppad.<b><font color="#000000">sparse_rc</font></b>();
     n = 5;
     pattern.<b><font color="#000000">resize</font></b>(n, n, n);
     <b><font color="#0000FF">for</font></b> k = [ 0 :(n-1) ]
          pattern.<b><font color="#000000">put</font></b>(k, k, k);
     <b><font color="#0000FF">end</font></b>
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% create n by n sparse representation of identity matrix</font></i>
     matrix = m_cppad.<b><font color="#000000">sparse_rcv</font></b>(pattern);
     <b><font color="#0000FF">for</font></b> k = [ 0 :(n-1) ]
          matrix.<b><font color="#000000">put</font></b>(k, 1.0);
     <b><font color="#0000FF">end</font></b>
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% row, column indices</font></i>
     row = matrix.<b><font color="#000000">row</font></b>();
     col = matrix.<b><font color="#000000">col</font></b>();
     val = matrix.<b><font color="#000000">val</font></b>();
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% check results</font></i>
     <b><font color="#0000FF">for</font></b> k = [ 0 :(n-1) ]
          ok = ok &amp;&amp; <b><font color="#000000">row</font></b>(k) == k;
          ok = ok &amp;&amp; <b><font color="#000000">col</font></b>(k) == k;
          ok = ok &amp;&amp; <b><font color="#000000">val</font></b>(k) == 1.0;
     <b><font color="#0000FF">end</font></b>
     <i><font color="#9A1900">%</font></i>
     <i><font color="#9A1900">% For this case, row_major and col_major order are same as original order</font></i>
     row_major = matrix.<b><font color="#000000">row_major</font></b>();
     col_major = matrix.<b><font color="#000000">col_major</font></b>();
     <b><font color="#0000FF">for</font></b> k = [ 0 :(n-1) ]
          ok = ok &amp;&amp; <b><font color="#000000">row_major</font></b>(k) == k;
          ok = ok &amp;&amp; <b><font color="#000000">col_major</font></b>(k) == k;
     <b><font color="#0000FF">end</font></b>
     <i><font color="#9A1900">%</font></i>
     <b><font color="#0000FF">return</font></b>;
<b><font color="#0000FF">end</font></b></tt></pre>

<hr>Input File: build/lib/example/octave/sparse_rcv_xam.m

</body>
</html>
