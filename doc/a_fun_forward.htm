<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Forward Mode AD</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Forward Mode AD">
<meta name="keywords" id="keywords" content=" forward mode ad syntax taylor coefficient af f(x) x(t) y(t) p xp yp example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_a_fun_forward_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_swig" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="a_fun_hessian_xam.py.htm" target="_top">Prev</a>
</td><td><a href="a_fun_forward_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_swig</option>
<option>library</option>
<option>a_fun</option>
<option>a_fun_forward</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_swig-&gt;</option>
<option>testing</option>
<option>swig_xam.i</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>library-&gt;</option>
<option>module</option>
<option>a_double</option>
<option>vector</option>
<option>a_fun</option>
<option>sparse</option>
<option>error</option>
<option>xam.m4</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>a_fun-&gt;</option>
<option>independent</option>
<option>abort_recording</option>
<option>a_fun_ctor</option>
<option>a_fun_jacobian</option>
<option>a_fun_hessian</option>
<option>a_fun_forward</option>
<option>a_fun_reverse</option>
<option>a_fun_optimize</option>
<option>a_fun_property</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>a_fun_forward-&gt;</option>
<option>a_fun_forward_xam.cpp</option>
<option>a_fun_forward_xam.m</option>
<option>a_fun_forward_xam.pm</option>
<option>a_fun_forward_xam.py</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>Taylor Coefficient</option>
<option>af</option>
<option>f(x)</option>
<option>X(t)</option>
<option>Y(t)</option>
<option>p</option>
<option>xp</option>
<option>yp</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@


<center><b><big><big>Forward Mode AD</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>yp</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>af</span></font></i><font color="blue"><span style='white-space: nowrap'>.forward(</span></font><i><font color="black"><span style='white-space: nowrap'>p</span></font></i><font color="blue"><span style='white-space: nowrap'>,&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>xp</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="Taylor Coefficient" id="Taylor Coefficient">Taylor Coefficient</a></big></b>
<br>
For a function <small>@(@
g(t)
@)@</small> of a scalar argument <small>@(@
t \in \B{R}
@)@</small>,
the <code><i>p</i></code>-th order Taylor coefficient is its
<code><font color="blue">p</font></code>-th order derivative divided by 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
 factorial
and evaluated at <small>@(@
t = 0
@)@</small>; i.e.,
<small>@[@

	g^{(p)} (0) /  p !

@]@</small>

<br>
<br>
<b><big><a name="af" id="af">af</a></big></b>
<br>
This object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a_fun&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>af</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
Note that its state is changed by this operation because it keeps
all the Taylor coefficient that it calculates for every
variable in recording it stored.
See more discussion of this fact under the heading
<a href="a_fun_forward.htm#p" target="_top"><span style='white-space: nowrap'>p</span></a>
 below.

<br>
<br>
<b><big><a name="f(x)" id="f(x)">f(x)</a></big></b>
<br>
We use the notation <small>@(@
f: \B{R}^n \rightarrow \B{R}^m
@)@</small>
for the function corresponding to 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
.
Note that 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 is the size of <a href="a_fun_ctor.htm#ax" target="_top"><span style='white-space: nowrap'>ax</span></a>

and 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
 is the size of <a href="a_fun_ctor.htm#ay" target="_top"><span style='white-space: nowrap'>ay</span></a>

in to the constructor for 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
.

<br>
<br>
<b><big><a name="X(t)" id="X(t)">X(t)</a></big></b>
<br>
We use the notation <small>@(@
X : \B{R} \rightarrow \B{R}^n
@)@</small>
for a function that the calling routine chooses.

<br>
<br>
<b><big><a name="Y(t)" id="Y(t)">Y(t)</a></big></b>
<br>
We define the function <small>@(@
Y : \B{R} \rightarrow \B{R}^n
@)@</small>
by <small>@(@
Y(t) = f(X(t))
@)@</small>.

<br>
<br>
<b><big><a name="p" id="p">p</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>p</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
i.e., it is a positive integer.
Its value is the order of the Taylor coefficient being calculated.
If there was no call to <code><font color="blue">forward</font></code> for this 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
,
the value of 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
 must be zero.
Otherwise, it must be between zero and one greater that its
value for the previous call using this 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
.
After this call, the Taylor coefficients for orders zero though 
<code><i><font color="black"><span style='white-space: nowrap'>p</span></font></i></code>
,
and for every variable in the recording, will be stored in 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
.

<br>
<br>
<b><big><a name="xp" id="xp">xp</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;vec_double&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>xp</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and its size must be 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
.
It specifies the <code><i>p</i></code>-th order Taylor coefficients for 
<code><i><font color="black"><span style='white-space: nowrap'>X(t)</span></font></i></code>
.

<br>
<br>
<b><big><a name="yp" id="yp">yp</a></big></b>
<br>
The result has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vec_double&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>yp</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and its size is 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
.
It is the <code><i>p</i></code>-th order Taylor coefficients for <small>@(@
Y(t)
@)@</small>.


<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
<a href="a_fun_forward_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>C++</span></a>
,
<a href="a_fun_forward_xam.m.htm" target="_top"><span style='white-space: nowrap'>Octave</span></a>
,
<a href="a_fun_forward_xam.pm.htm" target="_top"><span style='white-space: nowrap'>Perl</span></a>
,
<a href="a_fun_forward_xam.py.htm" target="_top"><span style='white-space: nowrap'>Python</span></a>
.



<hr>Input File: lib/a_fun.cpp

</body>
</html>
