<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Swig Example / Test: Perl Script</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Swig Example / Test: Perl Script">
<meta name="keywords" id="keywords" content=" swig example / test: perl script load the module initialize error count factorial_by_value message_of_void int_class int_array_ptr int_array_class vector_double raise_exception normal_class double_class set exit code ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_check_swig_xam.pl_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_swig" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="check_swig_xam.m.htm" target="_top">Prev</a>
</td><td><a href="library.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_swig</option>
<option>swig_xam.i</option>
<option>check_swig_xam.pl</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>cppad_swig-&gt;</option>
<option>testing</option>
<option>swig_xam.i</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>swig_xam.i-&gt;</option>
<option>swig_xam.hpp</option>
<option>check_swig_xam.py</option>
<option>check_swig_xam.m</option>
<option>check_swig_xam.pl</option>
</select>
</td>
<td>check_swig_xam.pl</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Load the Module</option>
<option>Initialize Error Count</option>
<option>factorial_by_value</option>
<option>message_of_void</option>
<option>int_class</option>
<option>int_array_ptr</option>
<option>int_array_class</option>
<option>vector_double</option>
<option>raise_exception</option>
<option>normal_class</option>
<option>double_class</option>
<option>Set Exit Code</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@<center><b><big><big>Swig Example / Test: Perl Script</big></big></b></center>
<br>
<b><big><a name="Load the Module" id="Load the Module">Load the Module</a></big></b>

<pre style='display:inline'><tt>
<font color="#008080">use</font> pl_swig_xam<font color="#990000">;</font>
</tt></pre>
<br>
<b><big><a name="Initialize Error Count" id="Initialize Error Count">Initialize Error Count</a></big></b>

<pre style='display:inline'><tt>
$error_count <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font>
</tt></pre>
<br>
<b><big><a name="factorial_by_value" id="factorial_by_value">factorial_by_value</a></big></b>

<pre><tt><b><font color="#0000FF">if</font></b><font color="#990000">(</font> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">factorial_by_value</font></b><font color="#990000">(</font><font color="#993399">4</font><font color="#990000">)</font> <font color="#990000">==</font> <font color="#993399">24</font> <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::factorial_by_value: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::factorial_by_value: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
see C++ <a href="swig_xam_function.htm#factorial_by_value" target="_top"><span style='white-space: nowrap'>factorial_by_value</span></a>
.

<br>
<br>
<b><big><a name="message_of_void" id="message_of_void">message_of_void</a></big></b>

<pre><tt><b><font color="#0000FF">if</font></b><font color="#990000">(</font> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">message_of_void</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#FF0000">"OK"</font> <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::message_of_void: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::message_of_void: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
see C++ <a href="swig_xam_function.htm#message_of_void" target="_top"><span style='white-space: nowrap'>message_of_void</span></a>
.

<br>
<br>
<b><big><a name="int_class" id="int_class">int_class</a></big></b>

<pre><tt>$obj <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">int_class</font></b><font color="#990000">();</font>
pl_swig_xam<font color="#990000">::</font><b><font color="#000000">add_by_ptr</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">,</font> <font color="#993399">4</font><font color="#990000">,</font> $obj<font color="#990000">);</font>
<b><font color="#0000FF">if</font></b><font color="#990000">(</font> $obj<font color="#990000">-&gt;</font><b><font color="#000000">value</font></b><font color="#990000">()</font> <font color="#990000">==</font> <font color="#993399">7</font> <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::add_by_ptr: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::add_by_ptr: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
see Swig <a href="swig_xam.i.htm#int_class" target="_top"><span style='white-space: nowrap'>int_class</span></a>
 and
C++ <a href="swig_xam_function.htm#add_by_ptr" target="_top"><span style='white-space: nowrap'>add_by_ptr</span></a>
.

<br>
<br>
<b><big><a name="int_array_ptr" id="int_array_ptr">int_array_ptr</a></big></b>

<pre><tt>$n <font color="#990000">=</font> <font color="#993399">10</font><font color="#990000">;</font>
$array_ptr <font color="#990000">=</font> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">new_int_array_ptr</font></b><font color="#990000">(</font>$n<font color="#990000">);</font>
<b><font color="#0000FF">for</font></b><font color="#990000">(</font>$i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> $i <font color="#990000">&lt;</font> $n<font color="#990000">;</font> $i<font color="#990000">++)</font>
<font color="#FF0000">{</font>    pl_swig_xam<font color="#990000">::</font><b><font color="#000000">int_array_ptr_setitem</font></b><font color="#990000">(</font>$array_ptr<font color="#990000">,</font> $i<font color="#990000">,</font> <font color="#993399">2</font> <font color="#990000">*</font> $i<font color="#990000">);</font> <font color="#FF0000">}</font>

<b><font color="#0000FF">if</font></b><font color="#990000">(</font> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">max_array_by_ptr</font></b><font color="#990000">(</font>$n<font color="#990000">,</font> $array_ptr<font color="#990000">)</font> <font color="#990000">==</font> <font color="#993399">18</font> <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::max_array_by_ptr: pointer: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::max_array_by_ptr: pointer: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font>
pl_swig_xam<font color="#990000">::</font><b><font color="#000000">delete_int_array_ptr</font></b><font color="#990000">(</font>$array_ptr<font color="#990000">);</font></tt></pre>
see Swig <a href="swig_xam.i.htm#int_array_ptr" target="_top"><span style='white-space: nowrap'>int_array_ptr</span></a>
 and
C++ <a href="swig_xam_function.htm#max_array_by_ptr" target="_top"><span style='white-space: nowrap'>max_array_by_ptr</span></a>
.

<br>
<br>
<b><big><a name="int_array_class" id="int_array_class">int_array_class</a></big></b>

<pre><tt>$n         <font color="#990000">=</font> <font color="#993399">10</font><font color="#990000">;</font>
$array_obj <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">int_array_class</font></b><font color="#990000">(</font>$n<font color="#990000">);</font>
<b><font color="#0000FF">for</font></b><font color="#990000">(</font>$i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> $i <font color="#990000">&lt;</font> $n<font color="#990000">;</font> $i<font color="#990000">++)</font>
<font color="#FF0000">{</font>    pl_swig_xam<font color="#990000">::</font><b><font color="#000000">int_array_ptr_setitem</font></b><font color="#990000">(</font>$array_obj<font color="#990000">,</font> $i<font color="#990000">,</font> <font color="#993399">2</font> <font color="#990000">*</font> $i<font color="#990000">);</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">if</font></b><font color="#990000">(</font> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">max_array_by_ptr</font></b><font color="#990000">(</font>$n<font color="#990000">,</font> $array_obj<font color="#990000">)</font> <font color="#990000">==</font> <font color="#993399">18</font> <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::max_array_by_ptr: class: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::max_array_by_ptr: class: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
see Swig <a href="swig_xam.i.htm#int_array_class" target="_top"><span style='white-space: nowrap'>int_array_class</span></a>
 and
C++ <a href="swig_xam_function.htm#max_array_by_ptr" target="_top"><span style='white-space: nowrap'>max_array_by_ptr</span></a>
.

<br>
<br>
<b><big><a name="vector_double" id="vector_double">vector_double</a></big></b>

<pre><tt>$n   <font color="#990000">=</font> <font color="#993399">10</font><font color="#990000">;</font>
$vec <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">vector_double</font></b><font color="#990000">(</font>$n<font color="#990000">);</font>
<b><font color="#0000FF">for</font></b><font color="#990000">(</font>$i <font color="#990000">=</font> <font color="#993399">0</font><font color="#990000">;</font> $i <font color="#990000">&lt;</font> $n<font color="#990000">;</font> $i<font color="#990000">++)</font>
<font color="#FF0000">{</font>    $vec<font color="#990000">-&gt;</font><b><font color="#000000">set</font></b><font color="#990000">(</font>$i<font color="#990000">,</font> <font color="#993399">2.0</font> <font color="#990000">*</font> $i<font color="#990000">);</font> <font color="#FF0000">}</font>

<b><font color="#0000FF">if</font></b><font color="#990000">(</font> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">max_std_vector_double</font></b><font color="#990000">(</font>$vec<font color="#990000">)</font> <font color="#990000">==</font> <font color="#993399">18.0</font> <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::max_std_vector_double: class: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::max_std_vector_double: class: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
see Swig <a href="swig_xam.i.htm#vector_double" target="_top"><span style='white-space: nowrap'>vector_double</span></a>
 and
C++ <a href="swig_xam_function.htm#max_std_vector_double" target="_top"><span style='white-space: nowrap'>max_std_vector_double</span></a>
.

<br>
<br>
<b><big><a name="raise_exception" id="raise_exception">raise_exception</a></big></b>

<pre><tt>$message <font color="#990000">=</font> <font color="#FF0000">""</font><font color="#990000">;</font>
eval <font color="#FF0000">{</font> # <font color="#008080">acts</font> like <font color="#FF0000">'try {'</font> in other languages
     pl_swig_xam<font color="#990000">::</font><b><font color="#000000">raise_exception</font></b><font color="#990000">(</font><font color="#FF0000">"test message</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">);</font>
<font color="#FF0000">}</font>
<font color="#990000">;</font> <b><font color="#0000FF">if</font></b><font color="#990000">(</font> $@ <font color="#990000">)</font> <font color="#FF0000">{</font> # <font color="#008080">acts</font> like <font color="#FF0000">'catch {'</font> in other languages
     $message <font color="#990000">=</font> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">raise_exception</font></b><font color="#990000">(</font><font color="#FF0000">""</font><font color="#990000">);</font>
<font color="#FF0000">}</font>
<b><font color="#0000FF">if</font></b><font color="#990000">(</font> $message <font color="#990000">==</font> <font color="#FF0000">"test message"</font> <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::raise_exception: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::raise_exception: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
see C++ <a href="swig_xam_function.htm#raise_exception" target="_top"><span style='white-space: nowrap'>raise_exception</span></a>
.

<br>
<br>
<b><big><a name="normal_class" id="normal_class">normal_class</a></big></b>

<pre><tt>$two   <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">normal_class</font></b><font color="#990000">(</font><font color="#993399">2</font><font color="#990000">);</font>
$three <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">normal_class</font></b><font color="#990000">(</font><font color="#993399">3</font><font color="#990000">);</font>
$five  <font color="#990000">=</font> $two <font color="#990000">+</font> $three<font color="#990000">;</font>
$check <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">normal_class</font></b><font color="#990000">(</font><font color="#993399">5</font><font color="#990000">);</font>
$ok    <font color="#990000">=</font> $five <font color="#990000">==</font> $check<font color="#990000">;</font>
$ok    <font color="#990000">=</font> $ok and <font color="#993399">4</font> <font color="#990000">&lt;</font> $five<font color="#990000">-&gt;</font><b><font color="#000000">value</font></b><font color="#990000">()</font>  and $five<font color="#990000">-&gt;</font><b><font color="#000000">value</font></b><font color="#990000">()</font> <font color="#990000">&lt;</font> <font color="#993399">6</font><font color="#990000">;</font>
<b><font color="#0000FF">if</font></b><font color="#990000">(</font> ok <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::normal_class: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::normal_class: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
see C++ <a href="swig_xam_normal_class.htm" target="_top"><span style='white-space: nowrap'>swig_xam_normal_class</span></a>
.

<br>
<br>
<b><big><a name="double_class" id="double_class">double_class</a></big></b>

<pre><tt>$two   <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">double_class</font></b><font color="#990000">(</font><font color="#993399">2.0</font><font color="#990000">);</font>
$three <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">double_class</font></b><font color="#990000">(</font><font color="#993399">3.0</font><font color="#990000">);</font>
$five  <font color="#990000">=</font> $two <font color="#990000">+</font> $three<font color="#990000">;</font>
$check <font color="#990000">=</font> <b><font color="#0000FF">new</font></b> pl_swig_xam<font color="#990000">::</font><b><font color="#000000">double_class</font></b><font color="#990000">(</font><font color="#993399">5.0</font><font color="#990000">);</font>
$ok    <font color="#990000">=</font> $five <font color="#990000">==</font> $check<font color="#990000">;</font>
$ok    <font color="#990000">=</font> $ok and <font color="#993399">4.5</font> <font color="#990000">&lt;</font> $five<font color="#990000">-&gt;</font><b><font color="#000000">value</font></b><font color="#990000">()</font>  and $five<font color="#990000">-&gt;</font><b><font color="#000000">value</font></b><font color="#990000">()</font> <font color="#990000">&lt;</font> <font color="#993399">5.5</font><font color="#990000">;</font>
<b><font color="#0000FF">if</font></b><font color="#990000">(</font> ok <font color="#990000">)</font>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::double_class: OK</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font> <font color="#FF0000">}</font>
<b><font color="#0000FF">else</font></b>
<font color="#FF0000">{</font>    print <font color="#FF0000">"pl_swig_xam::double_class: Error</font><font color="#CC33CC">\n</font><font color="#FF0000">"</font><font color="#990000">;</font>
     $error_count <font color="#990000">=</font> $error_count <font color="#990000">+</font> <font color="#993399">1</font><font color="#990000">;</font>
<font color="#FF0000">}</font></tt></pre>
see Swig <a href="swig_xam.i.htm#double_class" target="_top"><span style='white-space: nowrap'>double_class</span></a>
.

<br>
<br>
<b><big><a name="Set Exit Code" id="Set Exit Code">Set Exit Code</a></big></b>

<pre style='display:inline'><tt>
<b><font color="#0000FF">if</font></b><font color="#990000">(</font> $error_count <font color="#990000">==</font> <font color="#993399">0</font> <font color="#990000">)</font>
<font color="#FF0000">{</font>    exit <font color="#993399">0</font><font color="#990000">;</font> <font color="#FF0000">}</font>
exit <font color="#993399">1</font><font color="#990000">;</font>
</tt></pre>

<hr>Input File: swig_xam/perl/check_swig_xam.pl

</body>
</html>
