<html>
<script type='text/x-mathjax-config'>
MathJax.Hub.Config({
  tex2jax: {
    inlineMath:  [ ['@(@','@)@'] ] ,
    displayMath: [ ['@[@','@]@'] ]
  }
});
</script>
<script type='text/javascript' src=
'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default'
>
</script>
<head>
<title>Jacobian of an AD Function</title>
<meta http-equiv='Content-Type' content='text/html' charset='utf-8'>
<meta name="description" id="description" content="Jacobian of an AD Function">
<meta name="keywords" id="keywords" content=" jacobian ad function syntax af f(x) x j example ">
<style type='text/css'>
body { color : black }
body { background-color : white }
A:link { color : blue }
A:visited { color : purple }
A:active { color : purple }
</style>
<script type='text/javascript' language='JavaScript' src='_a_fun_jacobian_htm.js'>
</script>
</head>
<body>
<table><tr>
<td>
<a href="https://github.com/bradbell/cppad_swig" target="_top"><img border="0" src="_image.gif"></a>
</td>
<td><a href="a_fun_ctor.htm" target="_top">Prev</a>
</td><td><a href="a_fun_jacobian_xam.cpp.htm" target="_top">Next</a>
</td><td>
<select onchange='choose_across0(this)'>
<option>Index-&gt;</option>
<option>contents</option>
<option>reference</option>
<option>index</option>
<option>search</option>
<option>external</option>
</select>
</td>
<td>
<select onchange='choose_up0(this)'>
<option>Up-&gt;</option>
<option>cppad_swig</option>
<option>library</option>
<option>a_fun</option>
<option>a_fun_jacobian</option>
</select>
</td>
<td>
<select onchange='choose_down3(this)'>
<option>cppad_swig-&gt;</option>
<option>testing</option>
<option>swig_xam.i</option>
<option>library</option>
<option>whats_new_2018</option>
</select>
</td>
<td>
<select onchange='choose_down2(this)'>
<option>library-&gt;</option>
<option>module</option>
<option>a_double</option>
<option>vector</option>
<option>a_fun</option>
<option>sparse</option>
<option>error</option>
<option>xam.m4</option>
</select>
</td>
<td>
<select onchange='choose_down1(this)'>
<option>a_fun-&gt;</option>
<option>independent</option>
<option>abort_recording</option>
<option>a_fun_ctor</option>
<option>a_fun_jacobian</option>
<option>a_fun_hessian</option>
<option>a_fun_forward</option>
<option>a_fun_reverse</option>
<option>a_fun_optimize</option>
<option>a_fun_property</option>
</select>
</td>
<td>
<select onchange='choose_down0(this)'>
<option>a_fun_jacobian-&gt;</option>
<option>a_fun_jacobian_xam.cpp</option>
<option>a_fun_jacobian_xam.m</option>
<option>a_fun_jacobian_xam.pm</option>
<option>a_fun_jacobian_xam.py</option>
</select>
</td>
<td>
<select onchange='choose_current0(this)'>
<option>Headings-&gt;</option>
<option>Syntax</option>
<option>af</option>
<option>f(x)</option>
<option>x</option>
<option>J</option>
<option>Example</option>
</select>
</td>
</tr></table><br>
@(@\newcommand{\B}[1]{ {\bf #1} }
\newcommand{\R}[1]{ {\rm #1} }@)@


<center><b><big><big>Jacobian of an AD Function</big></big></b></center>
<br>
<b><big><a name="Syntax" id="Syntax">Syntax</a></big></b>

<br>

<code><i><font color="black"><span style='white-space: nowrap'>J</span></font></i><font color="blue"><span style='white-space: nowrap'>&nbsp;=&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>af</span></font></i><font color="blue"><span style='white-space: nowrap'>.jacobian(</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'>)</span></font></code>


<br>
<br>
<b><big><a name="af" id="af">af</a></big></b>
<br>
This object has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a_fun&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>af</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
Note that its state is changed by this operation.
The zero order
<a href="a_fun_forward.htm#Taylor Coefficient" target="_top"><span style='white-space: nowrap'>Taylor&nbsp;coefficients</span></a>
 in 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>

correspond to the value of 
<code><i><font color="black"><span style='white-space: nowrap'>x</span></font></i></code>
.
The other Taylor coefficients in 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
 are unspecified.

<br>
<br>
<b><big><a name="f(x)" id="f(x)">f(x)</a></big></b>
<br>
We use the notation <small>@(@
f: \B{R}^n \rightarrow \B{R}^m
@)@</small>
for the function corresponding to 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
.
Note that 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
 is the size of <a href="a_fun_ctor.htm#ax" target="_top"><span style='white-space: nowrap'>ax</span></a>

and 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i></code>
 is the size of <a href="a_fun_ctor.htm#ay" target="_top"><span style='white-space: nowrap'>ay</span></a>

in to the constructor for 
<code><i><font color="black"><span style='white-space: nowrap'>af</span></font></i></code>
.

<br>
<br>
<b><big><a name="x" id="x">x</a></big></b>
<br>
This argument has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const&nbsp;vec_double&amp;&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>x</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and its size must be 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
.
It specifies the argument value at we are computing the Jacobian
<small>@(@
f'(x)
@)@</small>.

<br>
<br>
<b><big><a name="J" id="J">J</a></big></b>
<br>
The result has prototype

<code><font color="blue"><span style='white-space: nowrap'><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vec_double&nbsp;</span></font><i><font color="black"><span style='white-space: nowrap'>J</span></font></i><font color="blue"><span style='white-space: nowrap'><br>
</span></font></code>
and its size is 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>*</span></font><i><font color="black"><span style='white-space: nowrap'>n</span></font></i></code>
.
For 
<code><i><font color="black"><span style='white-space: nowrap'>i</span></font></i></code>
 between zero and 
<code><i><font color="black"><span style='white-space: nowrap'>m</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>

and 
<code><i><font color="black"><span style='white-space: nowrap'>j</span></font></i></code>
 between zero and 
<code><i><font color="black"><span style='white-space: nowrap'>n</span></font></i><font color="blue"><span style='white-space: nowrap'>-1</span></font></code>
,
<small>@[@

	J [ i * n + j ] = \frac{ \partial f_i }{ \partial x_j } (x)

@]@</small>



<br>
<br>
<b><big><a name="Example" id="Example">Example</a></big></b>

<br>
<a href="a_fun_jacobian_xam.cpp.htm" target="_top"><span style='white-space: nowrap'>C++</span></a>
,
<a href="a_fun_jacobian_xam.m.htm" target="_top"><span style='white-space: nowrap'>Octave</span></a>
,
<a href="a_fun_jacobian_xam.pm.htm" target="_top"><span style='white-space: nowrap'>Perl</span></a>
,
<a href="a_fun_jacobian_xam.py.htm" target="_top"><span style='white-space: nowrap'>Python</span></a>
.



<hr>Input File: lib/a_fun.cpp

</body>
</html>
